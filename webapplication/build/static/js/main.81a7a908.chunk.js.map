{"version":3,"sources":["Component/options.js","Component/Form.js","Component/PieChart.js","Component/Table.js","Component/StockCharts/CandleStickChartWithMACDIndicator.js","Component/StockCharts/updatingDataWrapper.js","Component/StockCharts/Chart.js","Component/StockPriceChart.js","Component/ETF-Comparison.js","Component/StockDesriptionHeader.js","Component/ETF-Description.js","Component/scatterplot.js","Component/Historical-Arbitrage.js","Component/Live-Arbitrage.js","Component/Live-Arbitrage-Single.js","Component/User/login.js","Component/User/signup.js","Component/User/emailverification.js","Pages/ETF_Description/ETF_Descriptions/DescriptionTable.jsx","Pages/ETF_Description/ETF_Holdings/HoldingsPieChart.jsx","Pages/ETF_Description/ETF_Holdings/PieChartModal.jsx","Pages/ETF_Description/ETF_Holdings/HoldingsTable.jsx","Pages/ETF_Description/PNL/PnlTable.jsx","Pages/ETF_Description/ETF_Same_Issuer/SameIssuerTable.jsx","Pages/ETF_Description/ETF_Similar_Asset_Management/SimilarAssetUnderManagement.jsx","Pages/ETF_Description/ETF_Same_Industry/SameIndustryTable.jsx","Pages/ETF_Description/ETF_Description.jsx","index.js"],"names":["options","userPool","CognitoUserPool","UserPoolId","ClientId","Former","state","arr","date","moment","props","startDate","toDate","ETF","searchBy","labelField","valueField","color","dropdownPosition","changeDate","selecteddate","DateCopy","setState","submit","passdate","getFullYear","getMonth","slice","getDate","SubmitFn","FormSelect","map","element","index","key","select","event","target","values","value","setValues","selectValues","button","localStorage","getItem","Button","variant","onClick","username","history","cognitoUser","CognitoUser","Username","Pool","console","log","signOut","removeItem","clear","push","logout","isLoggedIn","Nav","className","Navbar","Item","Link","style","as","to","eventKey","Form","inline","Group","onChange","this","width","marginRight","backgroundColor","placeholder","noDataLabel","selected","Component","withRouter","renderActiveShape","RADIAN","Math","PI","cx","cy","midAngle","innerRadius","outerRadius","startAngle","endAngle","fill","payload","sin","cos","sx","sy","mx","my","ex","ey","textAnchor","x","y","dy","name","d","stroke","r","PieChartGraph","onPieEnter","data","activeIndex","chartname","COLORS","prevProps","height","padding","top","right","left","bottom","activeShape","dataKey","onMouseEnter","entry","length","PureComponent","stringConstructor","constructor","arrayConstructor","objectConstructor","whatIsIt","object","undefined","RenderRow","k","Object","keys","i","RenderRowClickable","submitFn","AppTable","getKeys","someJSON","MainKeys","Table","size","striped","bordered","hover","fontSize","unshift","getHeader","Key1","row","clickableTable","macdAppearance","macd","signal","divergence","mouseEdgeAppearance","textFill","strokeOpacity","strokeWidth","arrowWidth","CandleStickChartWithMACDIndicator","type","initialData","ratio","ema26","ema","id","windowSize","merge","c","accessor","ema12","macdCalculator","fast","slow","smaVolume50","sma","sourcePath","calculatedData","discontinuousTimeScaleProvider","inputDateAccessor","xScaleProvider","xScale","xAccessor","displayXAccessor","margin","seriesName","yExtents","high","low","axisAt","orient","showTicks","outerTickSize","ticks","at","displayFormat","format","yAccessor","itemType","edgeAt","close","open","origin","e","volume","w","h","tickFormat","timeFormat","rectRadius","appearance","React","defaultProps","fitWidth","ChartComponent","UpdatingComponentHOC","speed","onKeyPress","bind","document","addEventListener","interval","clearInterval","removeEventListener","keyCode","which","func","max","delta","min","setInterval","ref","displayName","getDisplayName","updatingDataWrapper","didupdate","nextProps","DataCopy","ColoredLine","ScatterPlot","unit","cursor","strokeDasharray","HistoricalArbitrage","etfArbitrageTableData","historicalArbitrageData","scatterPlotData","LoadingStatement","parseDate","timeParse","etfPriceData","fetchDataForADateAndETF","prevState","condition1","condition2","Row","Col","xs","md","Card","Header","etfmoversDictCount","highestChangeDictCount","Body","PNLStatementForTheDay","url","axios","get","then","res","JSON","parse","etfhistoricaldata","tsvParse","etfPrices","parseData","parseFloat","parseInt","CombinedPieCharts","useState","show","setShow","handleClose","Modal","dialogClassName","onHide","closeButton","Title","PieChart","Footer","TableStyling","EtfArbitrageTable_Func","Time","cls","getRowsData","Live_Arbitrage","LiveData","fetchETFLiveData","updateData","Date","getSeconds","Arbitrage","Spread","Symbol","VWPrice","TickVolume","NAVChange_pct","ETFPriceChange_pct","ETFMover1","ETFMover2","Change1","Change2","time","toLocaleString","LiveTable","Full_Day_Arbitrage_Data","Full_Day_Prices","LiveArbitrage","LiveSpread","LiveVWPrice","OpenPrice","ClosePrice","HighPrice","LowPrice","CurrentTime","ETFStatus","Signal","SignalStrength","pnlstatementforday","LiveColor","Prices","SignalCategorization","UpdateArbitragDataTables","appendToPreviousTable","Timestamp","SignalInfo","Strength","divStyle","paddingTop","SignInFormPage","Email","Password","email","forgotPassword","onSuccess","result","onFailure","err","alert","message","inputVerificationCode","verificationCode","prompt","newPassword","confirmPassword","Container","fluid","controlId","Label","Control","Text","Check","label","password","authData","authDetails","AuthenticationDetails","userData","authenticateUser","setItem","getIdToken","jwtToken","getExpiration","getIssuedAt","idToken","sub","signIn","Forgot","SignUpFormPage","Name","Phone","CnfrmPassword","signUp","lg","phone","ConfirmPassword","unix","toString","user","attrList","Value","attr","CognitoUserAttribute","userSub","EmailVerification","Code","userId","code","confirmRegistration","confirmUser","DescriptionTable","DescriptionData","order","setTableOrder","orderType","setOrderType","useEffect","sort","reverse","convertData","convertedData","entries","forEach","TickerWeight","HoldingsPieChart","tempData","PieChartModal","HoldingsTable","tableData","setTableData","Axios","catch","TickerName","PnlTable","PNLOverDates","SameIssuerTable","IssuerName","ETFName","TotalAssetsUnderMgmt","SimilarAssetUnderManagement","SimilarTotalAsstUndMgmt","SameIndustryTable","EtfDbCategory","ETF_Description","HoldingsData","SameIssuerETFs","EtfsWithSameEtfDbCategory","OHLCDailyData","magnitudeOfArbitrage","ETFDataObject","Issuer","ETFdbCategory","createBrowserHistory","PrivateRoute","component","path","rest","render","floor","getTime","App","etfname","newdate","ETFcopy","startDatecopy","SubmitNewETF","etfName","Live_Arbitrage_Single","ReactDOM","getElementById"],"mappings":"4RAAaA,G,cAAU,CACnB,CAAE,QAAW,OAAQ,MAAS,GAC9B,CAAE,QAAW,OAAQ,MAAS,GAC9B,CAAE,QAAW,MAAO,MAAS,GAC7B,CAAE,QAAW,OAAQ,MAAS,GAC9B,CAAE,QAAW,MAAO,MAAS,GAC7B,CAAE,QAAW,MAAO,MAAS,GAC7B,CAAE,QAAW,MAAO,MAAS,GAC7B,CAAE,QAAW,OAAQ,MAAS,GAC9B,CAAE,QAAW,MAAO,MAAS,GAC7B,CAAE,QAAW,MAAO,MAAS,GAC7B,CAAE,QAAW,OAAQ,MAAS,IAC9B,CAAE,QAAW,OAAQ,MAAS,IAC9B,CAAE,QAAW,MAAO,MAAS,IAC7B,CAAE,QAAW,OAAQ,MAAS,IAC9B,CAAE,QAAW,MAAO,MAAS,IAC7B,CAAE,QAAW,OAAQ,MAAS,IAC9B,CAAE,QAAW,OAAQ,MAAS,IAC9B,CAAE,QAAW,OAAQ,MAAS,IAC9B,CAAE,QAAW,MAAO,MAAS,IAC7B,CAAE,QAAW,OAAQ,MAAS,IAC9B,CAAE,QAAW,MAAO,MAAS,IAC7B,CAAE,QAAW,OAAQ,MAAS,IAC9B,CAAE,QAAW,OAAQ,MAAS,IAC9B,CAAE,QAAW,MAAO,MAAS,IAC7B,CAAE,QAAW,OAAQ,MAAS,IAC9B,CAAE,QAAW,OAAQ,MAAS,IAC9B,CAAE,QAAW,OAAQ,MAAS,IAC9B,CAAE,QAAW,MAAO,MAAS,IAC7B,CAAE,QAAW,MAAO,MAAS,IAC7B,CAAE,QAAW,MAAO,MAAS,IAC7B,CAAE,QAAW,MAAO,MAAS,IAC7B,CAAE,QAAW,OAAQ,MAAS,IAC9B,CAAE,QAAW,OAAQ,MAAS,IAC9B,CAAE,QAAW,MAAO,MAAS,IAC7B,CAAE,QAAW,MAAO,MAAS,IAC7B,CAAE,QAAW,MAAO,MAAS,IAC7B,CAAE,QAAW,MAAO,MAAS,IAC7B,CAAE,QAAW,MAAO,MAAS,IAC7B,CAAE,QAAW,MAAO,MAAS,IAC7B,CAAE,QAAW,MAAO,MAAS,IAC7B,CAAE,QAAW,MAAO,MAAS,IAC7B,CAAE,QAAW,MAAO,MAAS,IAC7B,CAAE,QAAW,MAAO,MAAS,IAC7B,CAAE,QAAW,MAAO,MAAS,IAC7B,CAAE,QAAW,MAAO,MAAS,IAC7B,CAAE,QAAW,MAAO,MAAS,IAC7B,CAAE,QAAW,MAAO,MAAS,IAC7B,CAAE,QAAW,MAAO,MAAS,IAC7B,CAAE,QAAW,MAAO,MAAS,IAC7B,CAAE,QAAW,MAAO,MAAS,IAC7B,CAAE,QAAW,MAAO,MAAS,IAC7B,CAAE,QAAW,MAAO,MAAS,IAC7B,CAAE,QAAW,OAAQ,MAAS,IAC9B,CAAE,QAAW,OAAQ,MAAS,IAC9B,CAAE,QAAW,MAAO,MAAS,IAC7B,CAAE,QAAW,OAAQ,MAAS,IAC9B,CAAE,QAAW,OAAQ,MAAS,IAC9B,CAAE,QAAW,MAAO,MAAS,IAC7B,CAAE,QAAW,MAAO,MAAS,IAC7B,CAAE,QAAW,MAAO,MAAS,IAC7B,CAAE,QAAW,MAAO,MAAS,IAC7B,CAAE,QAAW,MAAO,MAAS,IAC7B,CAAE,QAAW,MAAO,MAAS,IAC7B,CAAE,QAAW,MAAO,MAAS,IAC7B,CAAE,QAAW,MAAO,MAAS,IAC7B,CAAE,QAAW,MAAO,MAAS,IAC7B,CAAE,QAAW,MAAO,MAAS,IAC7B,CAAE,QAAW,MAAO,MAAS,IAC7B,CAAE,QAAW,MAAO,MAAS,IAC7B,CAAE,QAAW,MAAO,MAAS,IAC7B,CAAE,QAAW,MAAO,MAAS,IAC7B,CAAE,QAAW,MAAO,MAAS,IAC7B,CAAE,QAAW,MAAO,MAAS,IAC7B,CAAE,QAAW,MAAO,MAAS,IAC7B,CAAE,QAAW,MAAO,MAAS,IAC7B,CAAE,QAAW,OAAQ,MAAS,IAC9B,CAAE,QAAW,MAAO,MAAS,IAC7B,CAAE,QAAW,OAAQ,MAAS,IAC9B,CAAE,QAAW,MAAO,MAAS,IAC7B,CAAE,QAAW,MAAO,MAAS,IAC7B,CAAE,QAAW,OAAQ,MAAS,IAC9B,CAAE,QAAW,MAAO,MAAS,IAC7B,CAAE,QAAW,OAAQ,MAAS,IAC9B,CAAE,QAAW,OAAQ,MAAS,IAC9B,CAAE,QAAW,MAAO,MAAS,IAC7B,CAAE,QAAW,MAAO,MAAS,IAC7B,CAAE,QAAW,MAAO,MAAS,IAC7B,CAAE,QAAW,OAAQ,MAAS,IAC9B,CAAE,QAAW,OAAQ,MAAS,IAC9B,CAAE,QAAW,OAAQ,MAAS,IAC9B,CAAE,QAAW,OAAQ,MAAS,IAC9B,CAAE,QAAW,OAAQ,MAAS,IAC9B,CAAE,QAAW,OAAQ,MAAS,IAC9B,CAAE,QAAW,MAAO,MAAS,IAC7B,CAAE,QAAW,MAAO,MAAS,IAC7B,CAAE,QAAW,MAAO,MAAS,IAC7B,CAAE,QAAW,MAAO,MAAS,IAC7B,CAAE,QAAW,MAAO,MAAS,IAC7B,CAAE,QAAW,MAAO,MAAS,IAC7B,CAAE,QAAW,MAAO,MAAS,IAC7B,CAAE,QAAW,OAAQ,MAAS,KAC9B,CAAE,QAAW,MAAO,MAAS,KAC7B,CAAE,QAAW,OAAQ,MAAS,KAC9B,CAAE,QAAW,OAAQ,MAAS,KAC9B,CAAE,QAAW,MAAO,MAAS,KAC7B,CAAE,QAAW,MAAO,MAAS,KAC7B,CAAE,QAAW,MAAO,MAAS,KAC7B,CAAE,QAAW,MAAO,MAAS,KAC7B,CAAE,QAAW,MAAO,MAAS,KAC7B,CAAE,QAAW,MAAO,MAAS,KAC7B,CAAE,QAAW,MAAO,MAAS,KAC7B,CAAE,QAAW,OAAQ,MAAS,KAC9B,CAAE,QAAW,MAAO,MAAS,KAC7B,CAAE,QAAW,MAAO,MAAS,KAC7B,CAAE,QAAW,MAAO,MAAS,KAC7B,CAAE,QAAW,MAAO,MAAS,KAC7B,CAAE,QAAW,MAAO,MAAS,KAC7B,CAAE,QAAW,MAAO,MAAS,KAC7B,CAAE,QAAW,MAAO,MAAS,KAC7B,CAAE,QAAW,MAAO,MAAS,KAC7B,CAAE,QAAW,MAAO,MAAS,KAC7B,CAAE,QAAW,MAAO,MAAS,KAC7B,CAAE,QAAW,MAAO,MAAS,KAC7B,CAAE,QAAW,OAAQ,MAAS,KAC9B,CAAE,QAAW,OAAQ,MAAS,KAC9B,CAAE,QAAW,OAAQ,MAAS,KAC9B,CAAE,QAAW,OAAQ,MAAS,KAC9B,CAAE,QAAW,OAAQ,MAAS,KAC9B,CAAE,QAAW,OAAQ,MAAS,KAC9B,CAAE,QAAW,OAAQ,MAAS,KAC9B,CAAE,QAAW,MAAO,MAAS,KAC7B,CAAE,QAAW,OAAQ,MAAS,KAC9B,CAAE,QAAW,OAAQ,MAAS,KAC9B,CAAE,QAAW,MAAO,MAAS,KAC7B,CAAE,QAAW,OAAQ,MAAS,KAC9B,CAAE,QAAW,OAAQ,MAAS,KAC9B,CAAE,QAAW,OAAQ,MAAS,KAC9B,CAAE,QAAW,OAAQ,MAAS,KAC9B,CAAE,QAAW,OAAQ,MAAS,KAC9B,CAAE,QAAW,OAAQ,MAAS,KAC9B,CAAE,QAAW,OAAQ,MAAS,KAC9B,CAAE,QAAW,MAAO,MAAS,KAC7B,CAAE,QAAW,OAAQ,MAAS,KAC9B,CAAE,QAAW,OAAQ,MAAS,KAC9B,CAAE,QAAW,OAAQ,MAAS,KAC9B,CAAE,QAAW,OAAQ,MAAS,KAC9B,CAAE,QAAW,MAAO,MAAS,KAC7B,CAAE,QAAW,OAAQ,MAAS,KAC9B,CAAE,QAAW,OAAQ,MAAS,KAC9B,CAAE,QAAW,OAAQ,MAAS,KAC9B,CAAE,QAAW,OAAQ,MAAS,KAC9B,CAAE,QAAW,OAAQ,MAAS,KAC9B,CAAE,QAAW,OAAQ,MAAS,KAC9B,CAAE,QAAW,OAAQ,MAAS,KAC9B,CAAE,QAAW,MAAO,MAAS,KAC7B,CAAE,QAAW,MAAO,MAAS,KAC7B,CAAE,QAAW,MAAO,MAAS,KAC7B,CAAE,QAAW,MAAO,MAAS,KAC7B,CAAE,QAAW,MAAO,MAAS,KAC7B,CAAE,QAAW,MAAO,MAAS,KAC7B,CAAE,QAAW,MAAO,MAAS,KAC7B,CAAE,QAAW,MAAO,MAAS,KAC7B,CAAE,QAAW,OAAQ,MAAS,KAC9B,CAAE,QAAW,MAAO,MAAS,KAC7B,CAAE,QAAW,OAAQ,MAAS,KAC9B,CAAE,QAAW,MAAO,MAAS,KAC7B,CAAE,QAAW,KAAM,MAAS,KAC5B,CAAE,QAAW,MAAO,MAAS,KAC7B,CAAE,QAAW,MAAO,MAAS,KAC7B,CAAE,QAAW,OAAQ,MAAS,KAC9B,CAAE,QAAW,OAAQ,MAAS,KAC9B,CAAE,QAAW,MAAO,MAAS,KAC7B,CAAE,QAAW,MAAO,MAAS,KAC7B,CAAE,QAAW,MAAO,MAAS,KAC7B,CAAE,QAAW,MAAO,MAAS,KAC7B,CAAE,QAAW,MAAO,MAAS,KAC7B,CAAE,QAAW,KAAM,MAAS,KAC5B,CAAE,QAAW,MAAO,MAAS,KAC7B,CAAE,QAAW,MAAO,MAAS,KAC7B,CAAE,QAAW,MAAO,MAAS,KAC7B,CAAE,QAAW,MAAO,MAAS,KAC7B,CAAE,QAAW,MAAO,MAAS,KAC7B,CAAE,QAAW,MAAO,MAAS,KAC7B,CAAE,QAAW,MAAO,MAAS,KA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","file":"static/js/main.81a7a908.chunk.js","sourcesContent":["export const options = [\n    { \"element\": \"AMLP\", \"index\": 0 },\n    { \"element\": \"ARKG\", \"index\": 1 },\n    { \"element\": \"BBH\", \"index\": 2 },\n    { \"element\": \"BBRE\", \"index\": 3 },\n    { \"element\": \"DIA\", \"index\": 4 },\n    { \"element\": \"DLN\", \"index\": 5 },\n    { \"element\": \"ERX\", \"index\": 6 },\n    { \"element\": \"ESGU\", \"index\": 7 },\n    { \"element\": \"EWQ\", \"index\": 8 },\n    { \"element\": \"FBT\", \"index\": 9 },\n    { \"element\": \"FCOM\", \"index\": 10 },\n    { \"element\": \"FDIS\", \"index\": 11 },\n    { \"element\": \"FDN\", \"index\": 12 },\n    { \"element\": \"FENY\", \"index\": 13 },\n    { \"element\": \"FEX\", \"index\": 14 },\n    { \"element\": \"FHLC\", \"index\": 15 },\n    { \"element\": \"FIDU\", \"index\": 16 },\n    { \"element\": \"FIVG\", \"index\": 17 },\n    { \"element\": \"FIW\", \"index\": 18 },\n    { \"element\": \"FNCL\", \"index\": 19 },\n    { \"element\": \"FNX\", \"index\": 20 },\n    { \"element\": \"FREL\", \"index\": 21 },\n    { \"element\": \"FSTA\", \"index\": 22 },\n    { \"element\": \"FTA\", \"index\": 23 },\n    { \"element\": \"FTCS\", \"index\": 24 },\n    { \"element\": \"FTEC\", \"index\": 25 },\n    { \"element\": \"FUTY\", \"index\": 26 },\n    { \"element\": \"FXG\", \"index\": 27 },\n    { \"element\": \"FXH\", \"index\": 28 },\n    { \"element\": \"FXL\", \"index\": 29 },\n    { \"element\": \"FXU\", \"index\": 30 },\n    { \"element\": \"GSLC\", \"index\": 31 },\n    { \"element\": \"GUSH\", \"index\": 32 },\n    { \"element\": \"IAT\", \"index\": 33 },\n    { \"element\": \"IBB\", \"index\": 34 },\n    { \"element\": \"ICF\", \"index\": 35 },\n    { \"element\": \"IDU\", \"index\": 36 },\n    { \"element\": \"IEV\", \"index\": 37 },\n    { \"element\": \"IGE\", \"index\": 38 },\n    { \"element\": \"IGM\", \"index\": 39 },\n    { \"element\": \"IGV\", \"index\": 40 },\n    { \"element\": \"IHE\", \"index\": 41 },\n    { \"element\": \"IHF\", \"index\": 42 },\n    { \"element\": \"IHI\", \"index\": 43 },\n    { \"element\": \"IJH\", \"index\": 44 },\n    { \"element\": \"IJJ\", \"index\": 45 },\n    { \"element\": \"IJK\", \"index\": 46 },\n    { \"element\": \"IJR\", \"index\": 47 },\n    { \"element\": \"IJS\", \"index\": 48 },\n    { \"element\": \"IJT\", \"index\": 49 },\n    { \"element\": \"ITA\", \"index\": 50 },\n    { \"element\": \"ITB\", \"index\": 51 },\n    { \"element\": \"IUSG\", \"index\": 52 },\n    { \"element\": \"IUSV\", \"index\": 53 },\n    { \"element\": \"IVE\", \"index\": 54 },\n    { \"element\": \"IVOG\", \"index\": 55 },\n    { \"element\": \"IVOO\", \"index\": 56 },\n    { \"element\": \"IVV\", \"index\": 57 },\n    { \"element\": \"IVW\", \"index\": 58 },\n    { \"element\": \"IWP\", \"index\": 59 },\n    { \"element\": \"IWS\", \"index\": 60 },\n    { \"element\": \"IYC\", \"index\": 61 },\n    { \"element\": \"IYE\", \"index\": 62 },\n    { \"element\": \"IYF\", \"index\": 63 },\n    { \"element\": \"IYG\", \"index\": 64 },\n    { \"element\": \"IYH\", \"index\": 65 },\n    { \"element\": \"IYJ\", \"index\": 66 },\n    { \"element\": \"IYK\", \"index\": 67 },\n    { \"element\": \"IYM\", \"index\": 68 },\n    { \"element\": \"IYR\", \"index\": 69 },\n    { \"element\": \"IYT\", \"index\": 70 },\n    { \"element\": \"IYW\", \"index\": 71 },\n    { \"element\": \"IYZ\", \"index\": 72 },\n    { \"element\": \"JKD\", \"index\": 73 },\n    { \"element\": \"JKE\", \"index\": 74 },\n    { \"element\": \"JNUG\", \"index\": 75 },\n    { \"element\": \"KBE\", \"index\": 76 },\n    { \"element\": \"KBWB\", \"index\": 77 },\n    { \"element\": \"KIE\", \"index\": 78 },\n    { \"element\": \"KRE\", \"index\": 79 },\n    { \"element\": \"LABU\", \"index\": 80 },\n    { \"element\": \"MDY\", \"index\": 81 },\n    { \"element\": \"MDYG\", \"index\": 82 },\n    { \"element\": \"MDYV\", \"index\": 83 },\n    { \"element\": \"MGC\", \"index\": 84 },\n    { \"element\": \"MGK\", \"index\": 85 },\n    { \"element\": \"MGV\", \"index\": 86 },\n    { \"element\": \"MLPA\", \"index\": 87 },\n    { \"element\": \"MLPX\", \"index\": 88 },\n    { \"element\": \"MTUM\", \"index\": 89 },\n    { \"element\": \"NAIL\", \"index\": 90 },\n    { \"element\": \"NOBL\", \"index\": 91 },\n    { \"element\": \"NUGT\", \"index\": 92 },\n    { \"element\": \"OEF\", \"index\": 93 },\n    { \"element\": \"OIH\", \"index\": 94 },\n    { \"element\": \"PBW\", \"index\": 95 },\n    { \"element\": \"PEJ\", \"index\": 96 },\n    { \"element\": \"PEY\", \"index\": 97 },\n    { \"element\": \"PHO\", \"index\": 98 },\n    { \"element\": \"PJP\", \"index\": 99 },\n    { \"element\": \"PNQI\", \"index\": 100 },\n    { \"element\": \"PPA\", \"index\": 101 },\n    { \"element\": \"PSCH\", \"index\": 102 },\n    { \"element\": \"PSCT\", \"index\": 103 },\n    { \"element\": \"PSI\", \"index\": 104 },\n    { \"element\": \"PSJ\", \"index\": 105 },\n    { \"element\": \"PTH\", \"index\": 106 },\n    { \"element\": \"PWB\", \"index\": 107 },\n    { \"element\": \"PWV\", \"index\": 108 },\n    { \"element\": \"QLD\", \"index\": 109 },\n    { \"element\": \"QQQ\", \"index\": 110 },\n    { \"element\": \"QTEC\", \"index\": 111 },\n    { \"element\": \"REM\", \"index\": 112 },\n    { \"element\": \"REZ\", \"index\": 113 },\n    { \"element\": \"RHS\", \"index\": 114 },\n    { \"element\": \"ROM\", \"index\": 115 },\n    { \"element\": \"RPV\", \"index\": 116 },\n    { \"element\": \"RSP\", \"index\": 117 },\n    { \"element\": \"RWL\", \"index\": 118 },\n    { \"element\": \"RWR\", \"index\": 119 },\n    { \"element\": \"RYH\", \"index\": 120 },\n    { \"element\": \"RYT\", \"index\": 121 },\n    { \"element\": \"RYU\", \"index\": 122 },\n    { \"element\": \"SCHD\", \"index\": 123 },\n    { \"element\": \"SCHG\", \"index\": 124 },\n    { \"element\": \"SCHH\", \"index\": 125 },\n    { \"element\": \"SCHM\", \"index\": 126 },\n    { \"element\": \"SCHV\", \"index\": 127 },\n    { \"element\": \"SCHX\", \"index\": 128 },\n    { \"element\": \"SKYY\", \"index\": 129 },\n    { \"element\": \"SLY\", \"index\": 130 },\n    { \"element\": \"SLYG\", \"index\": 131 },\n    { \"element\": \"SLYV\", \"index\": 132 },\n    { \"element\": \"SMH\", \"index\": 133 },\n    { \"element\": \"SOXL\", \"index\": 134 },\n    { \"element\": \"SOXX\", \"index\": 135 },\n    { \"element\": \"SPLG\", \"index\": 136 },\n    { \"element\": \"SPLV\", \"index\": 137 },\n    { \"element\": \"SPMD\", \"index\": 138 },\n    { \"element\": \"SPSM\", \"index\": 139 },\n    { \"element\": \"SPXU\", \"index\": 140 },\n    { \"element\": \"SPY\", \"index\": 141 },\n    { \"element\": \"SPYD\", \"index\": 142 },\n    { \"element\": \"SPYG\", \"index\": 143 },\n    { \"element\": \"SPYV\", \"index\": 144 },\n    { \"element\": \"SRVR\", \"index\": 145 },\n    { \"element\": \"SSO\", \"index\": 146 },\n    { \"element\": \"SUSA\", \"index\": 147 },\n    { \"element\": \"SUSL\", \"index\": 148 },\n    { \"element\": \"TDIV\", \"index\": 149 },\n    { \"element\": \"TECL\", \"index\": 150 },\n    { \"element\": \"TQQQ\", \"index\": 151 },\n    { \"element\": \"USMV\", \"index\": 152 },\n    { \"element\": \"USSG\", \"index\": 153 },\n    { \"element\": \"VAW\", \"index\": 154 },\n    { \"element\": \"VBK\", \"index\": 155 },\n    { \"element\": \"VCR\", \"index\": 156 },\n    { \"element\": \"VDC\", \"index\": 157 },\n    { \"element\": \"VDE\", \"index\": 158 },\n    { \"element\": \"VFH\", \"index\": 159 },\n    { \"element\": \"VGT\", \"index\": 160 },\n    { \"element\": \"VHT\", \"index\": 161 },\n    { \"element\": \"VIOO\", \"index\": 162 },\n    { \"element\": \"VIS\", \"index\": 163 },\n    { \"element\": \"VLUE\", \"index\": 164 },\n    { \"element\": \"VNQ\", \"index\": 165 },\n    { \"element\": \"VO\", \"index\": 166 },\n    { \"element\": \"VOE\", \"index\": 167 },\n    { \"element\": \"VOO\", \"index\": 168 },\n    { \"element\": \"VOOG\", \"index\": 169 },\n    { \"element\": \"VOOV\", \"index\": 170 },\n    { \"element\": \"VOT\", \"index\": 171 },\n    { \"element\": \"VOX\", \"index\": 172 },\n    { \"element\": \"VPU\", \"index\": 173 },\n    { \"element\": \"VTV\", \"index\": 174 },\n    { \"element\": \"VUG\", \"index\": 175 },\n    { \"element\": \"VV\", \"index\": 176 },\n    { \"element\": \"XAR\", \"index\": 177 },\n    { \"element\": \"XBI\", \"index\": 178 },\n    { \"element\": \"XHB\", \"index\": 179 },\n    { \"element\": \"XHE\", \"index\": 180 },\n    { \"element\": \"XLB\", \"index\": 181 },\n    { \"element\": \"XLC\", \"index\": 182 },\n    { \"element\": \"XLE\", \"index\": 183 },\n    { \"element\": \"XLF\", \"index\": 184 },\n    { \"element\": \"XLI\", \"index\": 185 },\n    { \"element\": \"XLK\", \"index\": 186 },\n    { \"element\": \"XLP\", \"index\": 187 },\n    { \"element\": \"XLRE\", \"index\": 188 },\n    { \"element\": \"XLU\", \"index\": 189 },\n    { \"element\": \"XLV\", \"index\": 190 },\n    { \"element\": \"XLY\", \"index\": 191 },\n    { \"element\": \"XME\", \"index\": 192 },\n    { \"element\": \"XMLV\", \"index\": 193 },\n    { \"element\": \"XMMO\", \"index\": 194 },\n    { \"element\": \"XNTK\", \"index\": 195 },\n    { \"element\": \"XOP\", \"index\": 196 },\n    { \"element\": \"XRT\", \"index\": 197 },\n    { \"element\": \"XSD\", \"index\": 198 },\n    { \"element\": \"XSLV\", \"index\": 199 },\n];","import React, { Component } from 'react';\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\nimport DatePicker from \"react-datepicker\";\nimport Navbar from 'react-bootstrap/Navbar'\nimport Nav from 'react-bootstrap/Nav'\nimport '../static/css/NavStyle.css';\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { Link, Redirect } from 'react-router-dom';\nimport { withRouter } from 'react-router'\nimport { options } from \"./options\";\nimport moment from 'moment'\nimport {\n\tAuthenticationDetails,\n\tCognitoUserPool,\n\tCognitoUserAttribute,\n\tCognitoUser,\n\tCognitoUserSession,\n} from \"amazon-cognito-identity-js\";\nimport Select from \"react-dropdown-select\";\n  \n// CSS Modules, react-datepicker-cssmodules.css\nimport 'react-datepicker/dist/react-datepicker-cssmodules.css';\n\nconst userPool = new CognitoUserPool({UserPoolId: 'ap-south-1_x8YZmKVyG', ClientId: '2j72c46s52rm3us8rj720tsknd'});\n\nexport function logout(username, history) {\n\tvar cognitoUser = new CognitoUser({\n\t  Username: username,\n\t  Pool: userPool\n\t});\n\tconsole.log('signout')\n\t// call SigOut on User\n\tcognitoUser.signOut();\n\tlocalStorage.removeItem('username')\n\tlocalStorage.removeItem(\"Secret-Token\")\n\tlocalStorage.removeItem(\"Expiry-Timestamp\")\n\tlocalStorage.clear()\n\thistory.push('/Login')\n\tconsole.log(cognitoUser)\n}\n\n\nclass Former extends Component{\n\tstate={\n\t    arr : options,\n\t    date: moment(this.props.startDate, 'YYYYMMDD').toDate(),\n\t\tETF: this.props.ETF,\n\t\tsearchBy: \"element\",\n\t\tlabelField: \"element\",\n\t\tvalueField: \"element\",\n\t\tcolor: \"#0074D9\",\n\t\tdropdownPosition: \"bottom\",\n\t}\n\n\t\n\t// handling date change as well as checking if date lies between 16-17 as data provided has only that\n  \tchangeDate = (selecteddate) => {\n  \t\tvar DateCopy =  this.state.date;\n  \t\tDateCopy = selecteddate;\n  \t\tthis.setState({\n \t   \t\tdate:DateCopy,\n \t   \t});\n \t}\n\n  \t// Submit funtion to send state to parent to render \n  \tsubmit = () => {\n  \t\tvar passdate=''\n  \t\tpassdate = this.state.date.getFullYear() + (\"0\" + (this.state.date.getMonth() + 1)).slice(-2) + (\"0\" + this.state.date.getDate()).slice(-2)\n\t\tthis.props.SubmitFn(this.state.ETF, passdate);\n\t}\n\n  \t\n  \tFormSelect = (arr) => {\n\t\treturn arr.map((element, index) => { \n\t    \treturn <option key={index}>{element}</option>\n  \t\t})\n\t}\n\n\tselect =  (event) => {\n\t\tvar DateCopy =  this.state.ETF;\n  \t\tDateCopy = event.target.values;\n  \t\t\n\t\t this.setState({\n \t   \t\tETF:event.target.value\n \t   \t});\n\t}\n\t  \n\tsetValues = selectValues => this.setState({ ETF: selectValues[0].element });\n\n  render(){\n\t  let button;\n\t  if (localStorage.getItem('Secret-Token')){\n\t\tbutton = <Button variant=\"dark\" onClick={() => {logout(localStorage.getItem(\"username\"), this.props.history, this.state.isLoggedIn)}}>logout</Button>\n\t\t}\n\t\telse{\n\t\t\tbutton = [\n\t\t\t<Button variant=\"dark\" onClick={() => {this.props.history.push('/Login')}}>\n\t\t\t\tLogin\n\t\t\t</Button>,\n\t\t\t<Button variant=\"dark\" onClick={() => {this.props.history.push('/Signup')}}>\n\t\t\t\tSignup\n\t\t\t</Button>\n\t\t\t]\n\t\t}\n  \treturn (\n\t    <Nav className=\"bg-dark justify-content-between nav\">\n\t      <Navbar  className=\"bg-dark\">\n\t        <Nav>\n\t          <Nav.Item>\n\t            <Nav.Link style={{color: 'white'}} as={Link} to=\"/ETF-Description\" eventKey=\"ETF-Description\">ETF-Description</Nav.Link>\n\t          </Nav.Item>\n\t          <Nav.Item>\n\t            <Nav.Link style={{color: 'white'}} as={Link} to=\"/HistoricalArbitrage\" eventKey=\"Historical\">Historical Arbitrage</Nav.Link>\n\t          </Nav.Item>\n\t          <Nav.Item>\n\t            <Nav.Link style={{color: 'white'}} as={Link} to=\"/Live-Arbitrage-single\" eventKey=\"Live-Arbitrage\">Live-Arbitrage (Focus)</Nav.Link>\n\t          </Nav.Item>\n\t          <Nav.Item>\n\t            <Nav.Link style={{color: 'white'}} as={Link} to=\"/Live-Arbitrage\" eventKey=\"Live-Arbitrage\">Live-Arbitrage</Nav.Link>\n\t          </Nav.Item>\n\t        </Nav>\n\t      </Navbar>\n\t      <Navbar className=\"bg-dark\">\n\t        <Form inline >\n\t            <Form.Group onChange={this.select}>\n\t\t\t\t  <Select\n\t\t\t\t  \t\tstyle={{color: \"black\", width: '150px', marginRight: \"20px\", backgroundColor: \"white\"}}\n\t\t\t\t\t\tplaceholder=\"Select ETFs\"\n\t\t\t\t\t\tlabelField={this.state.labelField}\n\t\t\t\t\t\tvalueField={this.state.labelField}\n\t\t\t\t\t\toptions={options}\n\t\t\t\t\t\tonChange={values => this.setValues(values)}\n\t\t\t\t\t\tnoDataLabel=\"No matches found\"\n\t\t\t\t  />\n\t            </Form.Group>\n\t            <DatePicker\n\t              className=\"FormInput\"\n\t              selected={this.state.date}\n\t              onChange={this.changeDate}\n\t            />\n\t            <Button variant=\"primary\" onClick={this.submit}>\n\t              Submit\n\t            </Button>\n\t        </Form>\n\t\t\t{button}\n\t      </Navbar>\n\t    </Nav>\n\t  )\n\t}\n\n}\n\nexport default withRouter(Former);","import React, { PureComponent } from 'react';\r\nimport { PieChart, Pie, Sector, Cell, ResponsiveContainer } from 'recharts';\r\n\r\nconst renderActiveShape = (props) => {\r\n  const RADIAN = Math.PI / 180;\r\n  const {\r\n    cx, cy, midAngle, innerRadius, outerRadius, startAngle, endAngle,\r\n    fill, payload, value,\r\n  } = props;\r\n  const sin = Math.sin(-RADIAN * midAngle);\r\n  const cos = Math.cos(-RADIAN * midAngle);\r\n  const sx = cx + (outerRadius + 10) * cos;\r\n  const sy = cy + (outerRadius + 10) * sin;\r\n  const mx = cx + (outerRadius + 30) * cos;\r\n  const my = cy + (outerRadius + 30) * sin;\r\n  const ex = mx + (cos >= 0 ? 1 : -1) * 11;\r\n  const ey = my;\r\n  const textAnchor = cos >= 0 ? 'start' : 'end';\r\n\r\n  return (\r\n    <g>\r\n      <text x={cx} y={cy} dy={8} textAnchor=\"middle\" fill={fill}>{payload.name}</text>\r\n      <Sector\r\n        cx={cx}\r\n        cy={cy}\r\n        innerRadius={innerRadius}\r\n        outerRadius={outerRadius}\r\n        startAngle={startAngle}\r\n        endAngle={endAngle}\r\n        fill={fill}\r\n      />\r\n      <Sector\r\n        cx={cx}\r\n        cy={cy}\r\n        startAngle={startAngle}\r\n        endAngle={endAngle}\r\n        innerRadius={outerRadius + 6}\r\n        outerRadius={outerRadius + 10}\r\n        fill={fill}\r\n      />\r\n      <path d={`M${sx},${sy}L${mx},${my}L${ex},${ey}`} stroke={fill} fill=\"none\" />\r\n      <circle cx={ex} cy={ey} r={2} fill={fill} stroke=\"none\" />\r\n      <text x={ex + (cos >= 0 ? 1 : -1) * 12} y={ey} textAnchor={textAnchor} fill=\"#FFFFFF\">{`${value}`}</text>\r\n    </g>\r\n  );\r\n};\r\n\r\n\r\nclass PieChartGraph extends PureComponent {\r\n  constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n          data: [],\r\n          chartname:'',\r\n          activeIndex: 0,\r\n          COLORS     : ['#0088FE', '#00C49F', '#FFBB28', '#FF8042']\r\n      };\r\n  }\r\n\r\n  async componentDidUpdate(prevProps) {\r\n    if((this.props.data !== prevProps.data)){\r\n      await this.setState({data : []});\r\n      for (let key in this.props.data){\r\n        await this.setState({\r\n            data : [...this.state.data, {'name': key, 'value': this.props.data[key][this.props.element]}],\r\n            chartname:this.props.chartname\r\n        })\r\n      }\r\n    }\r\n  }\r\n\r\n  async componentDidMount (){\r\n    for (let key in this.props.data){\r\n      await this.setState({\r\n          data : [...this.state.data, {'name': key, 'value': this.props.data[key][this.props.element]}]\r\n      })\r\n    }\r\n  }\r\n  \r\n  onPieEnter = (data, index) => {\r\n    this.setState({\r\n      activeIndex: index,\r\n    });\r\n  };\r\n  \r\n  render() {\r\n    return (\r\n\r\n    <ResponsiveContainer width=\"100%\" height={250} padding={{ top: 1, right: 30, left: 20, bottom: 1 }}>\r\n      <PieChart>\r\n        <Pie\r\n        activeIndex={this.state.activeIndex}\r\n        activeShape={renderActiveShape}\r\n        data={this.state.data}\r\n        innerRadius={30}\r\n        outerRadius={80}\r\n        fill=\"#8884d8\"\r\n        dataKey=\"value\"\r\n        onMouseEnter={this.onPieEnter}\r\n        >\r\n          {\r\n              this.state.data.map((entry, index) => <Cell key={index} fill={this.state.COLORS[index % this.state.COLORS.length]}/>)\r\n          }\r\n        </Pie>\r\n      </PieChart>\r\n    </ResponsiveContainer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PieChartGraph;","import React from 'react';\r\nimport Table from 'react-bootstrap/Table'\r\nimport '../static/css/TableStyle.css'\r\n\r\nvar stringConstructor = \"test\".constructor;\r\nvar arrayConstructor = [].constructor;\r\nvar objectConstructor = ({}).constructor;\r\n\r\nfunction whatIsIt(object) {\r\n  if (object === null) {\r\n    return \"null\";\r\n  }\r\n  if (object === undefined) {\r\n    return \"undefined\";\r\n  }\r\n  if (object.constructor === stringConstructor) {\r\n    return \"String\";\r\n  }\r\n  if (object.constructor === arrayConstructor) {\r\n    return \"Array\";\r\n  }\r\n  if (object.constructor === objectConstructor) {\r\n    return \"Object\";\r\n  }\r\n  return \"don't know\";\r\n}\r\n\r\nconst AppTable = (props) => {\r\n  // getting all te keys to the json data to diectly fetch the data later\r\n  const getKeys = function(someJSON){\r\n    return Object.keys(someJSON);\r\n  }\r\n\r\n  const MainKeys = getKeys(props.data);\r\n  \r\n  // getting the headings for the heading of the table\r\n  const getHeader = function(){\r\n    // console.log(whatIsIt(props.data[MainKeys[0]]));\r\n    var keys = (whatIsIt(props.data[MainKeys[0]]) === \"Object\") ? getKeys(props.data[MainKeys[0]]) : [];\r\n    keys.unshift(\"\");\r\n    // console.log(keys);\r\n    return keys.map((key, index)=>{\r\n      // console.log(key);\r\n      return <th key={key}>{key}</th>\r\n    })\r\n  }\r\n  \r\n  // getting data for each of the rows\r\n  const getRowsData = function(){\r\n    // var keys = (whatIsIt(props.data[MainKeys[0]]) != \"Object\") ? getKeys(props.data[MainKeys[0]]) : [];\r\n    return MainKeys.map((Key1, index) => {\r\n      var row = (typeof(props.data[Key1]) == Object) ? props.data[Key1].values() : props.data[Key1];\r\n      // console.log(row);\r\n    \r\n      if (props.clickableTable=='True'){\r\n        //console.log(\"Clickable was called\");\r\n        return <RenderRowClickable k={Key1} key={index} data={row} submitFn={props.submitFn}/>\r\n      } else{\r\n        //console.log(\"None-Clickable was called\");\r\n        return <RenderRow k={Key1} key={index} data={row} />\r\n      }\r\n    }) \r\n  }\r\n  \r\n  const TableStyling = {\r\n    fontSize: '13px'\r\n  };\r\n\r\n  return (\r\n    <div className=\"Table\">\r\n      <Table size=\"sm\" striped bordered hover variant=\"dark\" style={TableStyling}>\r\n      <thead className=\"TableHead\">\r\n        <tr>{getHeader()}</tr>\r\n      </thead>\r\n      <tbody>\r\n        {getRowsData()}\r\n      </tbody>\r\n      </Table>\r\n    </div>          \r\n  );\r\n}\r\n\r\n// functional Component to render one row at a time\r\nconst RenderRow = (props) =>{\r\n  if (whatIsIt(props.data) !== \"Object\"){\r\n    return( \r\n      <tr>\r\n        <td className=\"Main\">{props.k}</td>\r\n        <td>{props.data}</td>\r\n      </tr>\r\n    )\r\n  }\r\n  else {\r\n    return(\r\n      <tr>\r\n        <td className=\"Main\">{props.k}</td>\r\n        {\r\n          Object.keys(props.data).map((key, i) => (\r\n            <td key={i}>{props.data[key]}</td>\r\n          ))\r\n        }\r\n      </tr>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n// functional Component to render one row at a time\r\nconst RenderRowClickable = (props) =>{\r\n  if (whatIsIt(props.data) !== \"Object\"){\r\n    return( \r\n      <tr>\r\n        <td className=\"Main\">{props.k}</td>\r\n        <td>{props.data}</td>\r\n      </tr>\r\n    )\r\n  }\r\n  else {\r\n    return(\r\n      <tr onClick={() => props.submitFn(props.k)}>\r\n        <td className=\"Main\">{props.k}</td>\r\n        {\r\n          Object.keys(props.data).map((key, i) => (\r\n            <td key={i}>{props.data[key]}</td>\r\n          ))\r\n        }\r\n      </tr>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AppTable","\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { format } from \"d3-format\";\nimport { timeFormat } from \"d3-time-format\";\n\nimport { ChartCanvas, Chart } from \"react-stockcharts\";\nimport {\n\tBarSeries,\n\tAreaSeries,\n\tCandlestickSeries,\n\tLineSeries,\n\tMACDSeries,\n} from \"react-stockcharts/lib/series\";\nimport { XAxis, YAxis } from \"react-stockcharts/lib/axes\";\nimport {\n\tCrossHairCursor,\n\tEdgeIndicator,\n\tCurrentCoordinate,\n\tMouseCoordinateX,\n\tMouseCoordinateY,\n} from \"react-stockcharts/lib/coordinates\";\n\nimport { discontinuousTimeScaleProvider } from \"react-stockcharts/lib/scale\";\nimport {\n\tOHLCTooltip,\n\tMovingAverageTooltip,\n\tMACDTooltip,\n} from \"react-stockcharts/lib/tooltip\";\nimport { ema, macd, sma } from \"react-stockcharts/lib/indicator\";\nimport { fitWidth } from \"react-stockcharts/lib/helper\";\n\nconst macdAppearance = {\n\tstroke: {\n\t\tmacd: \"#FF0000\",\n\t\tsignal: \"#00F300\",\n\t},\n\tfill: {\n\t\tdivergence: \"#4682B4\"\n\t},\n};\n\nconst mouseEdgeAppearance = {\n\ttextFill: \"#542605\",\n\tstroke: \"#05233B\",\n\tstrokeOpacity: 1,\n\tstrokeWidth: 3,\n\tarrowWidth: 5,\n\tfill: \"#BCDEFA\",\n};\n\nclass CandleStickChartWithMACDIndicator extends React.Component {\n\trender() {\n\t\tconst { type, data: initialData, width, ratio } = this.props;\n\t\tconst ema26 = ema()\n\t\t\t.id(0)\n\t\t\t.options({ windowSize: 26 })\n\t\t\t.merge((d, c) => { d.ema26 = c; })\n\t\t\t.accessor(d => d.ema26);\n\n\t\tconst ema12 = ema()\n\t\t\t.id(1)\n\t\t\t.options({ windowSize: 12 })\n\t\t\t.merge((d, c) => {d.ema12 = c;})\n\t\t\t.accessor(d => d.ema12);\n\n\t\tconst macdCalculator = macd()\n\t\t\t.options({\n\t\t\t\tfast: 12,\n\t\t\t\tslow: 26,\n\t\t\t\tsignal: 9,\n\t\t\t})\n\t\t\t.merge((d, c) => {d.macd = c;})\n\t\t\t.accessor(d => d.macd);\n\n\t\tconst smaVolume50 = sma()\n\t\t\t.id(3)\n\t\t\t.options({\n\t\t\t\twindowSize: 50,\n\t\t\t\tsourcePath: \"volume\",\n\t\t\t})\n\t\t\t.merge((d, c) => {d.smaVolume50 = c;})\n\t\t\t.accessor(d => d.smaVolume50);\n\n\t\tconst calculatedData = smaVolume50(macdCalculator(ema12(ema26(initialData))));\n\t\tconst xScaleProvider = discontinuousTimeScaleProvider\n\t\t\t.inputDateAccessor(d => d.date);\n\t\tconst {\n\t\t\tdata,\n\t\t\txScale,\n\t\t\txAccessor,\n\t\t\tdisplayXAccessor,\n\t\t} = xScaleProvider(calculatedData);\n\n\t\treturn (\n\t\t\t<ChartCanvas height={600}\n\t\t\t\twidth={width}\n\t\t\t\tratio={ratio}\n\t\t\t\tmargin={{ left: 70, right: 70, top: 20, bottom: 30 }}\n\t\t\t\ttype={type}\n\t\t\t\tseriesName=\"MSFT\"\n\t\t\t\tdata={data}\n\t\t\t\txScale={xScale}\n\t\t\t\txAccessor={xAccessor}\n\t\t\t\tdisplayXAccessor={displayXAccessor}\n\t\t\t>\n\t\t\t\t<Chart id={1} height={400}\n\t\t\t\t\tyExtents={[d => [d.high, d.low], ema26.accessor(), ema12.accessor()]}\n\t\t\t\t\tpadding={{ top: 10, bottom: 20 }}\n\t\t\t\t>\n\t\t\t\t\t<XAxis axisAt=\"bottom\" orient=\"bottom\" showTicks={false} outerTickSize={0} />\n\t\t\t\t\t<YAxis axisAt=\"right\" orient=\"right\" ticks={5} />\n\n\t\t\t\t\t<MouseCoordinateY\n\t\t\t\t\t\tat=\"right\"\n\t\t\t\t\t\torient=\"right\"\n\t\t\t\t\t\tdisplayFormat={format(\".2f\")}\n\t\t\t\t\t\t{...mouseEdgeAppearance}\n\t\t\t\t\t/>\n\n\t\t\t\t\t<CandlestickSeries />\n\t\t\t\t\t<LineSeries yAccessor={ema26.accessor()} stroke={ema26.stroke()}/>\n\t\t\t\t\t<LineSeries yAccessor={ema12.accessor()} stroke={ema12.stroke()}/>\n\n\t\t\t\t\t<CurrentCoordinate yAccessor={ema26.accessor()} fill={ema26.stroke()} />\n\t\t\t\t\t<CurrentCoordinate yAccessor={ema12.accessor()} fill={ema12.stroke()} />\n\n\t\t\t\t\t<EdgeIndicator itemType=\"last\" orient=\"right\" edgeAt=\"right\"\n\t\t\t\t\t\tyAccessor={d => d.close}\n\t\t\t\t\t\tfill={d => d.close > d.open ? \"#A2F5BF\" : \"#F9ACAA\"}\n\t\t\t\t\t\tstroke={d => d.close > d.open ? \"#0B4228\" : \"#6A1B19\"}\n\t\t\t\t\t\ttextFill={d => d.close > d.open ? \"#0B4228\" : \"#420806\"}\n\t\t\t\t\t\tstrokeOpacity={1}\n\t\t\t\t\t\tstrokeWidth={3}\n\t\t\t\t\t\tarrowWidth={2}\n\t\t\t\t\t/>\n\n\t\t\t\t\t<OHLCTooltip origin={[-40, 0]}/>\n\t\t\t\t\t<MovingAverageTooltip\n\t\t\t\t\t\tonClick={e => console.log(e)}\n\t\t\t\t\t\torigin={[-38, 15]}\n\t\t\t\t\t\toptions={[\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tyAccessor: ema26.accessor(),\n\t\t\t\t\t\t\t\ttype: \"EMA\",\n\t\t\t\t\t\t\t\tstroke: ema26.stroke(),\n\t\t\t\t\t\t\t\twindowSize: ema26.options().windowSize,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tyAccessor: ema12.accessor(),\n\t\t\t\t\t\t\t\ttype: \"EMA\",\n\t\t\t\t\t\t\t\tstroke: ema12.stroke(),\n\t\t\t\t\t\t\t\twindowSize: ema12.options().windowSize,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t]}\n\t\t\t\t\t/>\n\t\t\t\t</Chart>\n\t\t\t\t<Chart id={2} height={150}\n\t\t\t\t\tyExtents={[d => d.volume, smaVolume50.accessor()]}\n\t\t\t\t\torigin={(w, h) => [0, h - 300]}\n\t\t\t\t>\n\t\t\t\t\t<YAxis axisAt=\"left\" orient=\"left\" ticks={5} tickFormat={format(\".2s\")}/>\n\n\t\t\t\t\t<MouseCoordinateY\n\t\t\t\t\t\tat=\"left\"\n\t\t\t\t\t\torient=\"left\"\n\t\t\t\t\t\tdisplayFormat={format(\".4s\")}\n\t\t\t\t\t\t{...mouseEdgeAppearance}\n\t\t\t\t\t/>\n\n\t\t\t\t\t<BarSeries yAccessor={d => d.volume} fill={d => d.close > d.open ? \"#6BA583\" : \"#FF0000\"} />\n\t\t\t\t\t<AreaSeries yAccessor={smaVolume50.accessor()} stroke={smaVolume50.stroke()} fill={smaVolume50.fill()}/>\n\t\t\t\t</Chart>\n\t\t\t\t<Chart id={3} height={150}\n\t\t\t\t\tyExtents={macdCalculator.accessor()}\n\t\t\t\t\torigin={(w, h) => [0, h - 150]} padding={{ top: 10, bottom: 10 }}\n\t\t\t\t>\n\t\t\t\t\t<XAxis axisAt=\"bottom\" orient=\"bottom\"/>\n\t\t\t\t\t<YAxis axisAt=\"right\" orient=\"right\" ticks={2} />\n\n\t\t\t\t\t<MouseCoordinateX\n\t\t\t\t\t\tat=\"bottom\"\n\t\t\t\t\t\torient=\"bottom\"\n\t\t\t\t\t\tdisplayFormat={timeFormat(\"%Y-%m-%d\")}\n\t\t\t\t\t\trectRadius={5}\n\t\t\t\t\t\t{...mouseEdgeAppearance}\n\t\t\t\t\t/>\n\t\t\t\t\t<MouseCoordinateY\n\t\t\t\t\t\tat=\"right\"\n\t\t\t\t\t\torient=\"right\"\n\t\t\t\t\t\tdisplayFormat={format(\".2f\")}\n\t\t\t\t\t\t{...mouseEdgeAppearance}\n\t\t\t\t\t/>\n\n\t\t\t\t\t<MACDSeries yAccessor={d => d.macd}\n\t\t\t\t\t\t{...macdAppearance} />\n\t\t\t\t\t<MACDTooltip\n\t\t\t\t\t\torigin={[-38, 15]}\n\t\t\t\t\t\tyAccessor={d => d.macd}\n\t\t\t\t\t\toptions={macdCalculator.options()}\n\t\t\t\t\t\tappearance={macdAppearance}\n\t\t\t\t\t/>\n\t\t\t\t</Chart>\n\t\t\t\t<CrossHairCursor stroke=\"#FFFFFF\" />\n\t\t\t</ChartCanvas>\n\t\t);\n\t}\n}\n\nCandleStickChartWithMACDIndicator.propTypes = {\n\tdata: PropTypes.array.isRequired,\n\twidth: PropTypes.number.isRequired,\n\tratio: PropTypes.number.isRequired,\n\ttype: PropTypes.oneOf([\"svg\", \"hybrid\"]).isRequired,\n};\n\nCandleStickChartWithMACDIndicator.defaultProps = {\n\ttype: \"svg\",\n};\n\nCandleStickChartWithMACDIndicator = fitWidth(CandleStickChartWithMACDIndicator);\n\nexport default CandleStickChartWithMACDIndicator;\n","\nimport React from \"react\";\n\nfunction getDisplayName(ChartComponent) {\n\tconst name = ChartComponent.displayName || ChartComponent.name || \"ChartComponent\";\n\treturn name;\n}\n\nexport default function updatingDataWrapper(ChartComponent) {\n\tconst LENGTH = 130;\n\n\tclass UpdatingComponentHOC extends React.Component {\n\t\tconstructor(props) {\n\t\t\tsuper(props);\n\t\t\tthis.state = {\n\t\t\t\tlength: LENGTH,\n\t\t\t\tdata: this.props.data.slice(0, LENGTH),\n\t\t\t};\n\t\t\tthis.speed = 1000;\n\t\t\tthis.onKeyPress = this.onKeyPress.bind(this);\n\t\t}\n\t\tcomponentDidMount() {\n\t\t\tdocument.addEventListener(\"keyup\", this.onKeyPress);\n\t\t}\n\t\tcomponentWillUnmount() {\n\t\t\tif (this.interval) clearInterval(this.interval);\n\t\t\tdocument.removeEventListener(\"keyup\", this.onKeyPress);\n\t\t}\n\t\tonKeyPress(e) {\n\t\t\tconst keyCode = e.which;\n\t\t\tconsole.log(keyCode);\n\t\t\tswitch (keyCode) {\n\t\t\tcase 50: {\n\t\t\t\t\t// 2 (50) - Start alter data\n\t\t\t\tthis.func = () => {\n\t\t\t\t\tif (this.state.length < this.props.data.length) {\n\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\tlength: this.state.length + 1,\n\t\t\t\t\t\t\tdata: this.props.data.slice(0, this.state.length + 1),\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 80:\n\t\t\t\t\t// P (80)\n\t\t\tcase 49: {\n\t\t\t\t\t// 1 (49) - Start Push data\n\t\t\t\tthis.func = () => {\n\t\t\t\t\tif (this.state.length < this.props.data.length) {\n\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\tlength: this.state.length + 1,\n\t\t\t\t\t\t\tdata: this.props.data.slice(0, this.state.length + 1),\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 27: {\n\t\t\t\t\t// ESC (27) - Clear interval\n\t\t\t\tthis.func = null;\n\t\t\t\tif (this.interval) clearInterval(this.interval);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 107: {\n\t\t\t\t\t// + (107) - increase the this.speed\n\t\t\t\tthis.speed = Math.max(this.speed / 2, 50);\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tcase 109:\n\t\t\tcase 189: {\n\t\t\t\t\t// - (189, 109) - reduce the this.speed\n\t\t\t\tconst delta = Math.min(this.speed, 1000);\n\t\t\t\tthis.speed = this.speed + delta;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\t}\n\t\t\tif (this.func) {\n\t\t\t\tif (this.interval) clearInterval(this.interval);\n\t\t\t\tconsole.log(\"this.speed  = \", this.speed);\n\t\t\t\tthis.interval = setInterval(this.func, this.speed);\n\t\t\t}\n\t\t}\n\t\trender() {\n\t\t\tconst { type } = this.props;\n\t\t\tconst { data } = this.state;\n\n\t\t\treturn <ChartComponent ref=\"component\" data={data} type={type} />;\n\t\t}\n\t}\n\tUpdatingComponentHOC.defaultProps = {\n\t\ttype: \"svg\",\n\t};\n\tUpdatingComponentHOC.displayName = `updatingDataWrapper(${ getDisplayName(ChartComponent) })`;\n\n\treturn UpdatingComponentHOC;\n}","\nimport CandleStickChartWithMACDIndicator from \"./CandleStickChartWithMACDIndicator\";\nimport updatingDataWrapper from \"./updatingDataWrapper\";\n\nconst CandleStickChartWithUpdatingData = updatingDataWrapper(CandleStickChartWithMACDIndicator);\n\nexport default CandleStickChartWithUpdatingData;\n","import React from 'react';\nimport { render } from 'react-dom';\nimport Chart from './StockCharts/Chart';\nimport CandleStickChartWithMACDIndicator from './StockCharts/CandleStickChartWithMACDIndicator';\n\nimport { TypeChooser } from \"react-stockcharts/lib/helper\";\n\nclass ChartComponent extends React.Component {\n\t\n\tstate={\n\t\tdata: this.props.data,\n\t\tdidupdate:false\n\t}\n\t\n\tshouldComponentUpdate(nextProps) {\n\t  // You don't have to do this check first, but it can help prevent an unneeded render\n\t  \tif (nextProps.data.data !== this.state.data && nextProps.data.data!==undefined) {\n\t\t\tconsole.log(\"Went insideComponent Update Called\");\n\t    \tvar DataCopy =  this.state.date;\n\t  \t\tDataCopy = nextProps.data.data;\n\t  \t\tthis.setState({ \n\t  \t\t\tdata:DataCopy,\n\t  \t\t\tdidupdate:true\n\t  \t\t});\n\t  \t\treturn true\n\t  \t}\n\t  \treturn false\n\t}\n\n\trender() {\n\t\tif (this.state.data == '') {\n\t\t\treturn <div>Loading...</div>\n\t\t}\n\t\tif (this.state.didupdate){\n\t\t\tconsole.log(\"Rendering New Chart\");\n\t\t\treturn (\n\t\t\t<CandleStickChartWithMACDIndicator data={this.state.data} />\n\t\t\t)\t\n\t\t\tthis.state.didupdate=false;\n\t\t}\n\t}\n}\n\nexport default ChartComponent;","import React, { useState, useEffect } from \"react\";\r\nimport PieChart from \"./PieChart\";\r\nimport AppTable from \"./Table.js\";\r\nimport \"../static/css/Description.css\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport ChartComponent from \"./StockPriceChart\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport axios from \"axios\";\r\nimport Card from \"react-bootstrap/Card\";\r\n\r\nimport { tsvParse, csvParse } from \"d3-dsv\";\r\nimport { timeParse } from \"d3-time-format\";\r\n\r\nclass ETFComparison extends React.Component {\r\n  constructor(props) {\r\n  \tsuper(props);\r\n    this.state = {\r\n      ETFdata: null,\r\n      PNLdata: null,\r\n      ScatterPlotdata: null,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchETFDescriptionData();\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    const condition1 = this.props.ETF !== prevProps.ETF;\r\n    const condition2 = this.props.startDate !== prevProps.startDate;\r\n\r\n    if (condition1 || condition2) {\r\n      this.fetchETFDescriptionData();\r\n    }\r\n  }\r\n\r\n  fetchETFDescriptionData() {\r\n    axios\r\n      .get(\r\n        `http://localhost:5000/ETFComparison/${this.props.ETF}/${this.props.startDate}`\r\n      )\r\n      .then((res) => {\r\n        console.log(res);\r\n        this.setState({\r\n          //ETFdata: res.data.ETFdata,\r\n          PNLdata: res.data.PNLdata,\r\n          ScatterPlotdata: res.data.ScatterPlotdata,\r\n        });\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container fluid className=\"pt-3\">\r\n        <Row>\r\n          <Col xs={12} md={9}>\r\n            <Row>\r\n              <Col xs={12} md={4}>\r\n                <Card>\r\n                  <Card.Header className=\"text-white BlackHeaderForModal\">\r\n                    ETF ETfComparison\r\n                  </Card.Header>\r\n                  <Card.Body>\r\n                    <div className=\"DescriptionTable2\">\r\n                      {this.state.ETFdata != null ? (\r\n                        <AppTable\r\n                          data={this.state.ETFdata}\r\n                          clickableTable={\"False\"}\r\n                        />\r\n                      ) : (\r\n                        \"\"\r\n                      )}\r\n                    </div>\r\n                  </Card.Body>\r\n                </Card>\r\n              </Col>\r\n\r\n              <Col xs={12} md={4}>\r\n                <Card>\r\n                  <Card.Header className=\"text-white BlackHeaderForModal\">\r\n                    PNL Data\r\n                  </Card.Header>\r\n                  <Card.Body>\r\n                    <div className=\"DescriptionTable2\">\r\n                      {this.state.PNLdata != null ? (\r\n                        <AppTable\r\n                          data={this.state.PNLdata}\r\n                          clickableTable={\"False\"}\r\n                        />\r\n                      ) : (\r\n                        \"\"\r\n                      )}\r\n                    </div>\r\n                  </Card.Body>\r\n                </Card>\r\n              </Col>\r\n            </Row>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ETFComparison;","import React, {Component} from 'react';\n\n\nclass StockDesriptionHeader extends Component {\n\t\n\trender(){\n\t\treturn (\n\t\t<div>\n\t\t\t<h5> {this.props.ETF} </h5>\n    \t\t<h5> Date of Arbitrage : {this.props.startDate}</h5>\n    \t\t<ColoredLine color=\"black\" />\n\t\t</div>\n\t\t);\n\t}\n}\n\n\nconst ColoredLine = ({ color }) => (\n<hr\n    style={{\n        color: color,\n        backgroundColor: color\n    }}\n/>\n);\n\nexport default StockDesriptionHeader;\n\n","import React, { useState, useEffect } from 'react';\r\nimport PieChart from './PieChart';\r\nimport AppTable from './Table.js';\r\nimport '../static/css/Description.css';\r\nimport '../static/css/style.css';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport ChartComponent from './StockPriceChart';\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport Button from 'react-bootstrap/Button';\r\nimport axios from 'axios';\r\nimport Card from 'react-bootstrap/Card'\r\nimport { Dropdown,DropdownButton,ButtonGroup } from 'react-bootstrap'\r\n\r\nimport { tsvParse, csvParse } from  \"d3-dsv\";\r\nimport { timeParse } from \"d3-time-format\";\r\n\r\nclass Description extends React.Component{\r\n  \r\n  constructor(props){\r\n    super(props);\r\n    this.state ={\r\n      DescriptionData :null,\r\n      HoldingsData :'',\r\n      SameIssuerETFs:'',\r\n      IssuerName:null,\r\n      SimilarTotalAsstUndMgmt:'',\r\n      EtfsWithSameEtfDbCategory:'',\r\n      EtfDbCategory:null,\r\n      OHLCDailyData:'',\r\n      PNLOverDates:'',\r\n      LoadingStatement: \"Loading.. PNL for \" + this.props.ETF,\r\n      magnitudeOfArbitrage:'',\r\n      parseDate : timeParse(\"%Y-%m-%d %H:%M:%S\")\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchETFDescriptionData()\r\n    this.fetchSameIssuer()\r\n    this.fetchSameETFdbCategory()\r\n    this.fetchHoldingsData()\r\n    this.fetchDataCommonToAllDates()\r\n    }\r\n   \r\n  \r\n  componentDidUpdate(prevProps,prevState) {\r\n      const condition1=this.props.ETF !== prevProps.ETF;\r\n      const condition2=this.props.startDate !== prevProps.startDate;\r\n      \r\n      if (condition1 || condition2) {\r\n        this.fetchETFDescriptionData();\r\n        this.fetchHoldingsData()\r\n      }\r\n\r\n      if (this.state.IssuerName !== prevState.IssuerName){\r\n        this.fetchSameIssuer();\r\n      }\r\n\r\n      if (this.state.EtfDbCategory !== prevState.EtfDbCategory){\r\n        this.fetchSameETFdbCategory();\r\n      }\r\n\r\n      if(this.state.DescriptionData!==prevState.DescriptionData){\r\n          this.fetchOHLCDailyData();\r\n      }\r\n    }\r\n\r\n  \r\n  fetchETFDescriptionData(){\r\n    axios.get(`http://localhost:5000/ETfDescription/EtfData/${this.props.ETF}/${this.props.startDate}`).then(res =>{\r\n      console.log(res);\r\n        this.setState({\r\n          DescriptionData : res.data.ETFDataObject,\r\n          SimilarTotalAsstUndMgmt: res.data.SimilarTotalAsstUndMgmt,\r\n          IssuerName: res.data.ETFDataObject.Issuer,\r\n          EtfDbCategory: res.data.ETFDataObject.ETFdbCategory\r\n        });\r\n      });\r\n    \r\n    }\r\n\r\n  fetchSameIssuer(){\r\n      if(this.state.IssuerName!== null){\r\n        axios.get(`http://localhost:5000/ETfDescription/getETFWithSameIssuer/${this.state.IssuerName}`).then(res =>{\r\n          this.setState({SameIssuerETFs : res.data});\r\n        });\r\n      }\r\n    }\r\n\r\n    fetchHoldingsData(){\r\n        axios.get(`http://localhost:5000/ETfDescription/getHoldingsData/${this.props.ETF}/${this.props.startDate}`).then(res =>{\r\n          console.log(res);\r\n          this.setState({HoldingsData : res.data});\r\n        });\r\n    }\r\n\r\n\r\n  fetchSameETFdbCategory(){\r\n      if(this.state.EtfDbCategory!== null){\r\n        axios.get(`http://localhost:5000/ETfDescription/getETFsWithSameETFdbCategory/${this.state.EtfDbCategory}`).then(res =>{\r\n            this.setState({EtfsWithSameEtfDbCategory : res.data});\r\n        });\r\n      }\r\n    }\r\n\r\n  fetchOHLCDailyData(){\r\n    if(this.state.DescriptionData!== null){\r\n      console.log(\"Coming in to fetch\")\r\n        axios.get(`http://localhost:5000/ETfDescription/getOHLCDailyData/${this.props.ETF}/${this.state.DescriptionData['InceptionDate']}`).then(res =>{\r\n            this.setState({\r\n              OHLCDailyData : {'data':tsvParse(res.data, this.parseData(this.state.parseDate))},\r\n            });\r\n        });\r\n      }\r\n  }\r\n  \r\n  // Fetch Data which is common to an ETF across all dates\r\n  fetchDataCommonToAllDates(url){\r\n    axios.get(`http://localhost:5000/PastArbitrageData/CommonDataAcrossEtf/${this.props.ETF}`).then(res =>{\r\n    this.setState({\r\n      PNLOverDates: <AppTable data={JSON.parse(res.data.PNLOverDates)}/>,\r\n      magnitudeOfArbitrage : 0\r\n      });\r\n    });\r\n  }\r\n\r\n  parseData(parse) {\r\n    return function(d) {\r\n      d.date = parse(d.date);\r\n      d.open = +parseFloat(d.open);\r\n      d.high = +parseFloat(d.high);\r\n      d.low = +parseFloat(d.low);\r\n      d.close = +parseFloat(d.close);\r\n      d.volume = +parseInt(d.volume);\r\n      \r\n      return d;\r\n    };\r\n  }  \r\n\r\n  render(){\r\n      return (\r\n          <Row>\r\n            <Col xs={12} md={12}>\r\n              <Row>\r\n                <Col xs={12} md={3}>\r\n                  <Card>\r\n                    <Card.Header className=\"text-white BlackHeaderForModal\">ETF Description</Card.Header>\r\n                    <Card.Body className=\"CustomBackGroundColor\">\r\n                        <div className=\"DescriptionTable2\">\r\n                          {\r\n                           (this.state.DescriptionData != null) ? <AppTable data={this.state.DescriptionData} clickableTable={'False'} /> : \"\"\r\n                          }\r\n                        </div>\r\n                    </Card.Body>\r\n                  </Card>\r\n                </Col>\r\n                \r\n                {/*\r\n                <Col xs={12} md={8}>\r\n                  <Card>\r\n                    <Card.Header className=\"text-white BlackHeaderForModal\">Price Chart</Card.Header>\r\n                    <Card.Body style={{'backgroundColor':'#292b2c'}}>\r\n                      <ChartComponent data={this.state.OHLCDailyData} />\r\n                    </Card.Body>\r\n                  </Card>\r\n                </Col>\r\n              */}\r\n              \r\n              <Col xs={12} md={3}>\r\n                {\r\n                (this.state.HoldingsData != null) ? <this.HoldingsTableData data={this.state.HoldingsData} clickableTable={'False'} /> : \"\"\r\n                }\r\n              </Col>\r\n\r\n              <Col xs={12} md={6}>\r\n                  <Card>\r\n                    <Card.Header className=\"text-white BlackHeaderForModal\">\r\n                      <div class=\"row\">\r\n                        <div class=\"col-md-9\">\r\n                          PNL Data\r\n                        </div>\r\n                        <div class=\"col-md-3 float-right\">\r\n                          Arbitrage Magnitude : {this.MagnitudeOfArbitrageScorllable()}\r\n                        </div>\r\n                      </div>\r\n                    </Card.Header>\r\n                    <Card.Body className=\"CustomBackGroundColor\">\r\n                      <div className=\"DescriptionTable2\">\r\n                        {\r\n                          (this.state.PNLOverDates) ? this.state.PNLOverDates : this.state.LoadingStatement\r\n                        }\r\n                      </div>\r\n                    </Card.Body>\r\n                  </Card>\r\n                </Col>\r\n                \r\n                <Col xs={12} md={4}>\r\n                  <Card className=\"mb-2\">\r\n                    <Card.Header className=\"text-white BlackHeaderForModal\">ETFs from same issuer : {this.state.IssuerName}</Card.Header>\r\n                    <Card.Body className=\"CustomBackGroundColor\">\r\n                        <div className=\"DescriptionTable\">\r\n                           <AppTable data={this.state.SameIssuerETFs} clickableTable='True' submitFn={this.props.submitFn}/>\r\n                        </div>\r\n                    </Card.Body>\r\n                  </Card>\r\n                </Col>\r\n\r\n                <Col xs={12} md={4}>\r\n                  <Card className=\"mb-2\">\r\n                    <Card.Header className=\"text-white BlackHeaderForModal\">ETF with similar asset under mgmt</Card.Header>\r\n                    <Card.Body className=\"CustomBackGroundColor\">\r\n                        <div className=\"DescriptionTable\">\r\n                           <AppTable data={this.state.SimilarTotalAsstUndMgmt} clickableTable='True' submitFn={this.props.submitFn}/>\r\n                        </div>\r\n                    </Card.Body>\r\n                  </Card>\r\n                </Col>\r\n\r\n                <Col xs={12} md={4}>\r\n                <Card className=\"mb-2\">\r\n                    <Card.Header className=\"text-white BlackHeaderForModal\">ETF in same Industry : {this.state.EtfDbCategory}</Card.Header>\r\n                    <Card.Body className=\"CustomBackGroundColor\">\r\n                        <div className=\"DescriptionTable\">\r\n                           <AppTable data={this.state.EtfsWithSameEtfDbCategory} clickableTable='True' submitFn={this.props.submitFn}/>\r\n                        </div>\r\n                    </Card.Body>\r\n                  </Card>\r\n                </Col>\r\n\r\n              </Row>\r\n            </Col>\r\n          </Row>\r\n      )\r\n    }\r\n\r\n\r\n  HoldingsTableData = (props) => {\r\n  const [showPie, setPie] = useState(false);\r\n  const handleClose = () => setPie(false);\r\n  const handleShow = () => setPie(true);\r\n  return (\r\n      <Card>\r\n        <Card.Header className=\"text-white BlackHeaderForModal\">ETF Holdings</Card.Header>\r\n        <Card.Body className=\"CustomBackGroundColor\">\r\n            {/* Pie Chart Commented\r\n            <PieChart data={props.data} element={\"TickerWeight\"} />\r\n            */}\r\n            <div className=\"DescriptionTable2\">\r\n              <AppTable data={props.data} />\r\n            </div>\r\n        </Card.Body>\r\n      </Card>\r\n    )\r\n  }\r\n\r\n  MagnitudeOfArbitrageScorllable = () =>{\r\n    return(\r\n       <DropdownButton\r\n        as={ButtonGroup}\r\n        key={1}\r\n        variant={\"Arbitrage\"}\r\n        className=\"Warning\"\r\n        title={\"0.0\"}\r\n        size=\"sm\"\r\n      >\r\n        <Dropdown.Item eventKey=\"0\">0.0</Dropdown.Item>\r\n        <Dropdown.Item eventKey=\"1\">0.01</Dropdown.Item>\r\n        <Dropdown.Item eventKey=\"2\">0.02</Dropdown.Item>\r\n        <Dropdown.Item eventKey=\"3\">0.03</Dropdown.Item>\r\n        <Dropdown.Item eventKey=\"4\">0.04</Dropdown.Item>\r\n        <Dropdown.Item eventKey=\"5\">0.05</Dropdown.Item>\r\n        <Dropdown.Item eventKey=\"6\">0.06</Dropdown.Item>\r\n        <Dropdown.Item eventKey=\"7\">0.07</Dropdown.Item>\r\n        <Dropdown.Item eventKey=\"8\">0.08</Dropdown.Item>\r\n        <Dropdown.Item eventKey=\"9\">0.09</Dropdown.Item>\r\n        <Dropdown.Item eventKey=\"10\">0.10</Dropdown.Item>\r\n        <Dropdown.Item eventKey=\"11\">0.11</Dropdown.Item>\r\n        <Dropdown.Item eventKey=\"12\">0.12</Dropdown.Item>\r\n        <Dropdown.Item eventKey=\"13\">0.13</Dropdown.Item>\r\n        <Dropdown.Item eventKey=\"14\">0.14</Dropdown.Item>\r\n        <Dropdown.Item eventKey=\"15\">0.15</Dropdown.Item>\r\n      </DropdownButton>\r\n    )\r\n  }\r\n\r\n\r\n}\r\n  \r\n\r\nexport default Description;","import React from 'react';\nimport {ScatterChart, Scatter, XAxis, YAxis, CartesianGrid, Tooltip, Legend} from 'recharts';\n\nclass ScatterPlot extends React.Component {\n  \n  constructor(props){\n    super(props);\n  }\n\n  render() {\n    return (\n        <ScatterChart width={400} height={220}>\n          <CartesianGrid />\n          <XAxis stroke=\"#58FF33\" dataKey={'Net Asset Value Change%'} type=\"number\" name='Net Asset Value Chage %' unit='%'/>\n          <YAxis stroke=\"#58FF33\" dataKey={'ETF Change Price %'} type=\"number\" name='ETF Change Price %' unit='%'/>\n          <Scatter name='A school' data={this.props.data} fill='#3336FF'/>\n          <Tooltip cursor={{strokeDasharray: '3 3'}}/>\n        </ScatterChart>\n      );\n      \n  }\n}\n\nexport default ScatterPlot;","import React,{ useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport AppTable from './Table.js';\r\nimport Container from 'react-bootstrap/Container'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Col from 'react-bootstrap/Col'\r\nimport Card from 'react-bootstrap/Card'\r\nimport StockDesriptionHeader from './StockDesriptionHeader';\r\nimport ChartComponent from './StockPriceChart';\r\nimport ScatterPlot from './scatterplot';\r\nimport PieChartGraph from './PieChart';\r\nimport Modal from 'react-bootstrap/Modal'\r\nimport Table from \"react-bootstrap/Table\";\r\n\r\nimport '../static/css/Live_Arbitrage.css';\r\nimport '../static/css/style.css';\r\n// Code to display chaer\r\nimport { tsvParse, csvParse } from  \"d3-dsv\";\r\nimport { timeParse } from \"d3-time-format\";\r\n\r\n\r\nclass HistoricalArbitrage extends React.Component{\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state ={\r\n\t\t\tetfArbitrageTableData : null,\r\n\t\t\thistoricalArbitrageData:'',\r\n\t\t\tscatterPlotData:'',\r\n\t\t\tLoadingStatement: \"Loading.. PNL for \" + this.props.ETF,\r\n\t\t\tparseDate : timeParse(\"%Y-%m-%d %H:%M:%S\"),\r\n\t\t\tetfPriceData:''\r\n\t\t}\r\n\t\tthis.fetchDataForADateAndETF = this.fetchDataForADateAndETF.bind(this);\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.fetchDataForADateAndETF();\r\n\t}\r\n  \t\r\n  \t// Use instead of unsafe to update\r\n  \tcomponentDidUpdate(prevProps,prevState) {\r\n  \t\t// This updates states which corresponds to any day for any etf\r\n  \t\t// If date changes update the states to get data for the date\r\n  \t\t// If ETFName changes get the data for that day for the etf\r\n  \t\tconst condition1=this.props.ETF !== prevProps.ETF;\r\n  \t\tconst condition2=this.props.startDate !== prevProps.startDate;\r\n  \t\tif (condition1 || condition2) {\r\n  \t\t\tthis.fetchDataForADateAndETF()\r\n\t\t}\r\n\r\n  \t\t// This updates data which is common to an etf - eg all historical PNL dates datas\r\n  \t\t// This data is common for a particular etf. eg for XLK, this data will remain same for all dates\r\n  \t\t// Only update when etfname changes\r\n  \t\tif (condition1) {\r\n  \t\t\tthis.state.LoadingStatement= \"Loading.. PNL for \" + this.props.ETF;\r\n\t\t}\r\n\t}\r\n\t\r\n\trender(){\r\n\r\n  \t\treturn(\r\n  \t\t\t<Row>\r\n\t          <Col className=\"etfArbitrageTable\" xs={12} md={5}>\r\n\t          \t<Card>\r\n\t\t\t\t    <Card.Header className=\"modalCustomHeader text-white CustomBackGroundColor\">\r\n\t\t\t\t\t  <div className=\"row\">\r\n                        <div className=\"col-md-10\">\r\n                          {this.props.ETF} {this.props.startDate}\r\n                        </div>\r\n                        <div className=\"col-md-2 float-right\">\r\n                        <CombinedPieCharts etfmoversDictCount={this.state.etfmoversDictCount} highestChangeDictCount={this.state.highestChangeDictCount}/>\r\n                        </div>\r\n                      </div>\r\n\t\t\t\t\t</Card.Header>\r\n\t\t\t\t  <Card.Body className=\"BlackHeaderForModal\">\r\n\t\t\t  \t\t<div className=\"FullPageDiv\">\r\n\t\t\t\t    \t<EtfArbitrageTable_Func data={this.state.etfArbitrageTableData} />\r\n\t\t\t\t    </div>\r\n\t\t\t\t  </Card.Body>\r\n\t\t\t\t</Card>\r\n\t          </Col>\r\n\r\n\t          <Col xs={12} md={7}>\r\n\t          \t\r\n\t          \t<Row>\r\n\t          \t\t<Col xs={12} md={4}>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t<Col xs={12} md={12}>\r\n\t\t\t\t\t\t\t\t<Card className=\"CustomCard\">\r\n\t\t\t\t\t\t\t\t\t<Card.Header className=\"CustomCardHeader text-white\">\r\n\t\t\t\t\t\t\t\t\tPNL</Card.Header>\r\n\t\t\t\t\t\t\t\t  \t<Card.Body className=\"CustomCardBody text-white\">\r\n\t\t\t\t\t\t\t\t\t\t{this.state.PNLStatementForTheDay}\r\n\t\t\t\t\t\t\t\t  \t</Card.Body>\r\n\t\t\t\t\t\t\t\t</Card>\r\n\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t</Row>\r\n\r\n\t          \t\t</Col>\r\n\r\n\t          \t\t<Col xs={12} md={8}>\r\n\r\n\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t<Col xs={12} md={12}>\r\n\t\t\t\t\t\t\t\t<Card>\r\n\t\t\t\t\t\t\t\t  <Card.Header className=\"modalCustomHeader text-white CustomBackGroundColor\">Price Chart</Card.Header>\r\n\t\t\t\t\t\t\t\t  <Card.Body className=\"BlackHeaderForModal\">\r\n\t\t\t\t\t\t\t\t    <ChartComponent data={this.state.etfPriceData} />\r\n\t\t\t\t\t\t\t\t  </Card.Body>\r\n\t\t\t\t\t\t\t\t</Card>\r\n\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t<Col xs={12} md={12}>\r\n\t\t\t\t\t\t\t\t<Card className=\"CustomCard\">\r\n\t\t\t\t\t\t\t\t\t<Card.Header className=\"CustomCardHeader text-white\">\r\n\t\t\t\t\t\t\t\t\t\tETF Change % Vs NAV change %\r\n\t\t\t\t\t\t\t\t\t</Card.Header>\r\n\t\t\t\t\t\t\t\t  \t<Card.Body className=\"CustomCardBody text-white\">\r\n\t\t\t\t\t\t\t\t\t\t{this.state.scatterPlotData}\t\t\t\t\t\t  \t\r\n\t\t\t\t\t\t\t\t  \t</Card.Body>\r\n\t\t\t\t\t\t\t\t</Card>\r\n\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t</Row>\r\n\r\n\t\t\t\t\t</Col>\r\n\t\t\t\t</Row>\r\n\r\n\t          </Col>\r\n\t        </Row>\r\n        )\r\n  \t}\r\n\r\n\r\n  \t// Fetch Data For an ETF & a Date\r\n\tfetchDataForADateAndETF(url){\r\n\t\taxios.get(`http://localhost:5000/PastArbitrageData/${this.props.ETF}/${this.props.startDate}`).then(res =>{\r\n\t\t\tconsole.log(res);\r\n\t\t\tthis.setState({\r\n\t\t\t \tetfArbitrageTableData : JSON.parse(res.data.etfhistoricaldata),\r\n\t\t\t \tPNLStatementForTheDay : <AppTable data={JSON.parse(res.data.PNLStatementForTheDay)}/>,\r\n\t\t\t \tetfPriceData : {'data':tsvParse(res.data.etfPrices, this.parseData(this.state.parseDate))},\r\n\t\t\t \tscatterPlotData: <ScatterPlot data={JSON.parse(res.data.scatterPlotData)}/>,\r\n\t\t\t \tetfmoversDictCount: JSON.parse(res.data.etfmoversDictCount),\r\n\t\t\t \thighestChangeDictCount: JSON.parse(res.data.highestChangeDictCount)\r\n\t\t\t});\r\n\t\t\tconsole.log(this.state.etfPriceData);\r\n\t\t});\r\n\t}\r\n\r\n   \t// Parse Data For Stock Price Chart\r\n   \tparseData(parse) {\r\n\t\treturn function(d) {\r\n\t\t\td.date = parse(d.date);\r\n\t\t\td.open = +parseFloat(d.open);\r\n\t\t\td.high = +parseFloat(d.high);\r\n\t\t\td.low = +parseFloat(d.low);\r\n\t\t\td.close = +parseFloat(d.close);\r\n\t\t\td.volume = +parseInt(d.volume);\r\n\t\t\t\r\n\t\t\treturn d;\r\n\t\t};\r\n\t}\r\n}\r\n\r\n\r\n// Pie Chart whic is the modal windo\r\nconst CombinedPieCharts = (props) =>{\r\n\t  const [show, setShow] = useState(false);\r\n\r\n\t  const handleClose = () => setShow(false);\r\n\t  const handleShow = () => setShow(true);\r\n\t  console.log(props);\r\n\t  return (\r\n\t   <>\r\n      <Button variant=\"warning\" size=\"sm\" onClick={handleShow}>\r\n        Etf Movers\r\n      </Button>\r\n\r\n      <Modal dialogClassName=\"my-modal\" show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>\r\n          \tUnderlying Holdings\r\n          </Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n        \t<Row>\r\n          \t\t<Col xs={12} md={12}>\r\n\t\t\t\t\t<Card>\r\n\t\t\t\t\t\t<Card.Header className=\"CustomCardHeader text-white CustomBackGroundColor\">Holdings</Card.Header>\r\n\t\t\t\t\t\t<Card.Body className=\"CustomCardBody text-white\">\r\n\t\t\t\t\t\t\t<Row>\r\n\t\t\t\t\t\t\t\t<Col xs={12} md={6}>\r\n\t\t\t\t\t\t\t\t\t<center><h5>Etf Movers</h5></center>\r\n\t\t\t\t\t\t\t\t\t<PieChartGraph data={props.etfmoversDictCount} element={\"Count\"}/>\r\n\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t\t<Col xs={12} md={6}>\r\n\t\t\t\t\t\t\t\t\t<center><h5>Market Movers</h5></center>\r\n\t\t\t\t\t\t\t\t\t<PieChartGraph data={props.highestChangeDictCount} element={\"Count\"}/>\r\n\t\t\t\t\t\t\t\t</Col>\r\n\t\t\t\t\t\t\t</Row>\r\n\t\t\t\t\t\t</Card.Body>\r\n\t\t\t\t\t</Card>\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={handleClose}>\r\n            Close\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={handleClose}>\r\n            Save Changes\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\n\r\nconst TableStyling = {\r\n    fontSize: '13px'\r\n  };\r\n\r\nconst EtfArbitrageTable_Func = (props) =>{\r\n\tconsole.log(props);\r\n\tif(props.data == {} || props.data == undefined){\r\n        return \"Loading\";\r\n    }\r\n\r\n\tconst { data } = props;\r\n   \t\r\n   \tconst getKeys = function(someJSON){\r\n        return Object.keys(someJSON);\r\n    }\r\n\r\n   const getRowsData = () => {\r\n   \t\tvar Time = getKeys(props.data.Time)\r\n\r\n        return Time.map((key, index) => {\r\n            //console.log(key);\r\n            let cls = \"\";\r\n            if (props.data['$Arbitrage'][key] < 0){\r\n                cls = \"Red\";\r\n            }\r\n            else if(props.data['$Arbitrage'][key] > 0){\r\n                cls = \"Green\";\r\n            }\r\n            else {\r\n                cls = \"\";\r\n            }\r\n            return (\r\n                <tr key={index}>\r\n                    <td className={cls}>{props.data['Time'][key]}</td>\r\n                    <td className={cls}>{props.data['$Arbitrage'][key]}</td>\r\n                    <td className={cls}>{props.data['$Spread'][key]}</td>\r\n                    <td className={cls}>{props.data['Absolute Arbitrage'][key]}</td>\r\n                    <td className={cls}>{props.data['Over Bought/Sold'][key]}</td>\r\n                    <td>{props.data['Etf Mover'][key]}</td>\r\n                    <td>{props.data['Most Change%'][key]}</td>\r\n                    <td>{props.data['T'][key]}</td>\r\n                    <td>{props.data['T+1'][key]}</td>\r\n                </tr>\r\n            )\r\n        })\r\n    }\r\n\r\n   return (\r\n     \t   <Table size=\"sm\" striped bordered hover variant=\"dark\" style={TableStyling}>\r\n             <thead>\r\n               <tr>\r\n                 <th>Time</th>\r\n                 <th>$Arbitrage</th>\r\n                 <th>$Spread</th>\r\n                 <th>Absolute Arbitrage</th>\r\n                 <th>Over Bought/Sold</th>\r\n                 <th>Etf Mover</th>\r\n                 <th>Most Change%</th>\r\n                 <th>T</th>\r\n                 <th>T+1</th>\r\n               </tr>\r\n             </thead>\r\n             <tbody>\r\n               {getRowsData()}\r\n             </tbody>\r\n           </Table>\r\n   );\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default HistoricalArbitrage;","import React, { useState, useEffect } from 'react';\r\nimport Table from 'react-bootstrap/Table'\r\nimport '../static/css/Live_Arbitrage.css';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport axios from 'axios';\r\nimport { ChartCanvas, Chart } from \"react-stockcharts\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport '../static/css/Live_Arbitrage.css';\r\n\r\n\r\nclass Live_Arbitrage extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n\r\n    state = {\r\n        LiveData: {},\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.fetchETFLiveData()\r\n    }\r\n  \r\n    fetchETFLiveData(){\r\n        this.updateData();\r\n        setInterval(() => {\r\n            if ((new Date()).getSeconds() == 8){\r\n                this.updateData();\r\n            }\r\n        }, 1000)\r\n    }\r\n\r\n\r\n    updateData(){\r\n        axios.get(`http://localhost:5000/ETfLiveArbitrage/AllTickers`).then(res =>{\r\n            console.log(res);\r\n            this.setState({\r\n                Arbitrage: res.data['Arbitrage in $'],\r\n                Spread: res.data['ETF Trading Spread in $'],\r\n                Symbol: res.data.Symbol,\r\n                VWPrice: res.data.VWPrice,\r\n                TickVolume: res.data.TickVolume,\r\n                NAVChange_pct: res.data['Net Asset Value Change%'],\r\n                ETFPriceChange_pct: res.data['ETF Change Price %'],\r\n                ETFMover1: res.data['ETFMover%1'],\r\n                ETFMover2: res.data['ETFMover%2'],\r\n                Change1: res.data['Change%1'],\r\n                Change2: res.data['Change%2'],\r\n                \r\n                time: (new Date()).toLocaleString(),\r\n            });\r\n        });\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <Row>\r\n                <Col xs={12} md={12}>\r\n                <p>{this.state.time}</p>\r\n                    <div className=\"LiveArbitrageTable pt-1\">\r\n                        {\r\n                            (this.state.Symbol != null) ? <LiveTable data={this.state} /> : \"\"\r\n                        }\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst TableStyling = {\r\n    fontSize: '13px'\r\n  };\r\n\r\nconst LiveTable = (props) => {\r\n    if(props.data == {} || props.data == undefined){\r\n        return \"Loading\";\r\n    }\r\n    console.log(props);\r\n    const getKeys = function(someJSON){\r\n        return Object.keys(someJSON);\r\n    }\r\n\r\n    const getRowsData = () => {\r\n        var Symbols = getKeys(props.data.Symbol)\r\n\r\n        return Symbols.map((key, index) => {\r\n            // console.log(key);\r\n            let cls = \"\";\r\n            if (props.data.Arbitrage[key] < 0){\r\n                cls = \"Red\";\r\n            }\r\n            else if(props.data.Arbitrage[key] > 0){\r\n                cls = \"Green\";\r\n            }\r\n            else {\r\n                cls = \"\";\r\n            }\r\n            return (\r\n                <tr key={index}>\r\n                    <td className={cls}>{props.data.Symbol[key]}</td>\r\n                    <td className={cls}>{props.data.Arbitrage[key]}</td>\r\n                    <td>{props.data.Spread[key]}</td>\r\n                    <td>{props.data.NAVChange_pct[key]}</td>\r\n                    <td>{props.data.ETFPriceChange_pct[key]}</td>\r\n                    <td>{props.data.VWPrice[key]}</td>\r\n                    <td>{props.data.TickVolume[key]}</td>\r\n                    <td>{props.data.ETFMover1[key][0]}</td>\r\n                    <td>{props.data.Change1[key][0]}</td>\r\n                </tr>\r\n            )\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className=\"Table\">\r\n          <Table striped bordered hover variant=\"dark\"  style={TableStyling}>\r\n          <thead className=\"TableHead\">\r\n            <tr>\r\n                <td>Symbol</td>\r\n                <td>$ Arbitrage</td>\r\n                <td>$ Spread</td>\r\n                <td>NAV Change %</td>\r\n                <td>ETF Change %</td>\r\n                <td>$ Price</td>\r\n                <td>Tick Volume</td>\r\n                <td>ETFMover</td>\r\n                <td>H Change</td>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {getRowsData()}\r\n          </tbody>\r\n          </Table>\r\n        </div>          \r\n    );\r\n}\r\n\r\nexport default Live_Arbitrage;","import React, { useState, useEffect } from 'react';\nimport AppTable from './Table.js';\nimport Table from 'react-bootstrap/Table';\nimport '../static/css/Live_Arbitrage.css';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport axios from 'axios';\nimport { tsvParse, csvParse } from  \"d3-dsv\";\nimport { timeParse } from \"d3-time-format\";\nimport Card from 'react-bootstrap/Card'\nimport ScatterPlot from './scatterplot';\nimport ChartComponent from './StockPriceChart';\n\n\nclass Live_Arbitrage extends React.Component{\n    constructor(props){\n        super(props);\n    }\n\n    state ={\n        Full_Day_Arbitrage_Data: {},\n        Full_Day_Prices : '',\n        scatterPlotData:'',\n        LiveArbitrage:'',\n        LiveSpread:'',\n        // Prices\n        LiveVWPrice:'',\n        OpenPrice:'',\n        ClosePrice:'',\n        HighPrice:'',\n        LowPrice:'',\n        parseDate : timeParse(\"%Y-%m-%d %H:%M:%S\"),\n        CurrentTime:'',\n        // Signal\n        ETFStatus:'',\n        Signal:'',\n        SignalStrength:'',\n        pnlstatementforday:'',\n        LiveColor:'',\n    }\n\n    componentDidMount() {\n        this.fetchETFLiveData(true);\n    }\n   \n    componentDidUpdate(prevProps,prevState) {\n        if (this.props.ETF !== prevProps.ETF) {\n            this.fetchETFLiveData(true);\n        }\n    }\n\n    fetchETFLiveData(){\n        // Load the Historical Arbitrgae Data for Today \n        axios.get(`http://localhost:5000/ETfLiveArbitrage/Single/${this.props.ETF}`).then(res =>{\n            console.log(\"fetchETFLiveData\");\n            console.log(res);\n            this.setState({\n                Full_Day_Arbitrage_Data: JSON.parse(res.data.Arbitrage),\n                Full_Day_Prices: {'data':tsvParse(res.data.Prices, this.parseData(this.state.parseDate))},\n                pnlstatementforday: <AppTable data={JSON.parse(res.data.pnlstatementforday)}/>,\n                SignalCategorization: <AppTable data={JSON.parse(res.data.SignalCategorization)}/>,\n                scatterPlotData: <ScatterPlot data={JSON.parse(res.data.scatterPlotData)}/>,\n            });\n        });    \n        // Immediately Load the current Live arbitrage Data\n        this.UpdateArbitragDataTables(false)\n\n        // Does Iterative calls\n        setInterval(() => {\n            if ((new Date()).getSeconds() == 8){\n                this.UpdateArbitragDataTables(true)\n            }\n        }, 1000)\n    }\n\n    UpdateArbitragDataTables(appendToPreviousTable){\n        axios.get(`http://localhost:5000/ETfLiveArbitrage/Single/UpdateTable/${this.props.ETF}`).then(res =>{\n            console.log(res);\n            if(appendToPreviousTable){\n                console.log(\"Append To Previous table\");\n            }else{\n                this.setState({\n                    LiveArbitrage: res.data.Arbitrage.Arbitrage[0],\n                    LiveSpread: res.data.Arbitrage.Spread[0],\n                    CurrentTime: res.data.Arbitrage.Timestamp[0],\n                    LiveVWPrice: res.data.Prices.VWPrice[0],\n                    OpenPrice: res.data.Prices.open[0],\n                    ClosePrice: res.data.Prices.close[0],\n                    HighPrice: res.data.Prices.high[0],\n                    LowPrice: res.data.Prices.low[0],\n                    ETFStatus: res.data.SignalInfo.ETFStatus,\n                    Signal: res.data.SignalInfo.Signal,\n                    SignalStrength: res.data.SignalInfo.Strength,\n                    LiveColor: res.data.Arbitrage.Arbitrage[0]<0 ? 'text-success':res.data.Arbitrage.Arbitrage[0]==0? 'text-muted':'text-danger'\n                });\n            }\n        });    \n    }\n\n    render(){\n        return (\n            <Row>\n                <Col xs={12} md={4}>\n                    <div className=\"FullPageDiv\">\n                        <Card>\n                          <Card.Header className=\"text-white\" style={{'background-color':'#292b2c'}}>\n                              Live Arbitrage\n                          </Card.Header>\n                          <Card.Body style={{'backgroundColor':'#292b2c'}}>\n                            <div className=\"FullPageDiv\">\n                                <LiveTable data={this.state.Full_Day_Arbitrage_Data} />\n                            </div>\n                          </Card.Body>\n                        </Card>\n                    </div>\n                </Col>\n\n                <Col xs={12} md={3}>\n                    <div className=\"\">\n                        <Card>\n                            <Card.Header className=\"text-white\" style={{'backgroundColor':'#292b2c'}}>\n                                <span className=\"h4 pull-left pr-2\">{this.props.ETF}</span>\n                                H: <span className=\"text-muted\">{this.state.HighPrice} </span>\n                                O: <span className=\"text-muted\">{this.state.OpenPrice} </span>\n                                C: <span className=\"text-muted\">{this.state.ClosePrice} </span>\n                                L: <span className=\"text-muted\">{this.state.LowPrice} </span>\n\n                                <div>Time: <span className=\"text-muted\">{this.state.CurrentTime}</span></div>\n                            </Card.Header>\n                        \n                              <Card.Body className=\"text-white\"style={{'backgroundColor':'#292b2c'}}>\n                                <div><h5><span className={this.state.LiveColor}>ETF Status: {this.state.ETFStatus}</span></h5></div>\n                                <div><h5><span className={this.state.LiveColor}>Signal: {this.state.Signal}</span></h5></div>\n                                <div><span className={this.state.LiveColor}>Strength: {this.state.SignalStrength}</span></div>\n\n                                <div><span className=\"\">$ Arbitrage: {this.state.LiveArbitrage}</span></div>\n                                <div><span className=\"\">$ Spread: {this.state.LiveSpread}</span></div>    \n                              </Card.Body>\n                        </Card>\n                    </div>\n\n                    <div className=\"pt-3\">\n                        {this.state.pnlstatementforday}\n                    </div>\n\n                    <div className=\"pt-3\">\n                        {this.state.SignalCategorization}\n                    </div>\n\n                </Col>\n\n                <Col xs={12} md={5}>\n                    <div className=\"DescriptionTable3\">\n                        <ChartComponent data={this.state.Full_Day_Prices} />\n                    </div>\n                    \n                    <Row>\n                        <Col xs={12} md={6}>\n                            {this.state.scatterPlotData}                            \n                        </Col>\n                    </Row>\n\n                </Col>\n            </Row>\n        )\n    }\n\n\n    // Parse Data For Stock Price Chart\n    parseData(parse) {\n        return function(d) {\n            d.date = parse(d.date);\n            d.open = +parseFloat(d.open);\n            d.high = +parseFloat(d.high);\n            d.low = +parseFloat(d.low);\n            d.close = +parseFloat(d.close);\n            d.volume = +parseInt(d.TickVolume);\n            \n            return d;\n        };\n    }\n\n}\n\n\nconst TableStyling = {\n    fontSize: '13px'\n  };\n\nconst LiveTable = (props) => {\n    if(props.data.Arbitrage==undefined){\n        console.log(props.data);\n        return \"Loading\";\n    }\n    const getKeys = function(someJSON){\n        return Object.keys(someJSON);\n    }\n\n    const getRowsData = () => {\n        var Symbols = getKeys(props.data.Symbol)\n\n        return Symbols.map((key, index) => {\n            // console.log(key);\n            let cls = \"\";\n            if (props.data.Arbitrage[key] < 0){\n                cls = \"Red\";\n            }\n            else if(props.data.Arbitrage[key] > 0){\n                cls = \"Green\";\n            }\n            else {\n                cls = \"\";\n            }\n            return (\n                <tr key={index}>\n                    <td className={cls}>{props.data.Timestamp[key]}</td>\n                    <td className={cls}>{props.data.Arbitrage[key]}</td>\n                    <td>{props.data.Spread[key]}</td>\n                    <td>{props.data.VWPrice[key]}</td>\n                    <td>{props.data.TickVolume[key]}</td>\n                </tr>\n            )\n        })\n    }\n\n    return (\n        <div className=\"Table\">\n          <Table size=\"sm\" striped bordered hover variant=\"dark\"  style={TableStyling}>\n          <thead className=\"TableHead\">\n            <tr>\n                <td>Time</td>\n                <td>Arbitrage</td>\n                <td>Spread</td>\n                <td>Price</td>\n                <td>TickVolume</td>\n            </tr>\n          </thead>\n          <tbody>\n            {getRowsData()}\n          </tbody>\n          </Table>\n        </div>          \n    );\n}\n\nexport default Live_Arbitrage;","import React from \"react\";\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport Modal from 'react-bootstrap/Modal'\nimport {\n  AuthenticationDetails,\n  CognitoUserPool,\n  CognitoUserAttribute,\n  CognitoUser,\n  CognitoUserSession,\n} from \"amazon-cognito-identity-js\";\n\nimport { withRouter } from 'react-router';\n\nconst divStyle = {\n  paddingTop: '10%',\n};\n\nconst userPool = new CognitoUserPool({UserPoolId: 'us-east-1_rLN94MOu0', ClientId: '5fhruc7d6tfo0o1kr41ltfass5'});\n\nexport const signIn = (\n  email,\n  password,\n  history\n) => {\n  const authData = {\n    Username: email,\n    Password: password,\n  };\n  const authDetails = new AuthenticationDetails(authData);\n  const userData = {\n    Username: email,\n    Pool: userPool,\n  };\n  const cognitoUser = new CognitoUser(userData);\n  cognitoUser.authenticateUser(authDetails, {\n    onSuccess(result) {\n      localStorage.setItem(\"username\", email);\n      localStorage.setItem(\"Secret-Token\", result.getIdToken().jwtToken)\n      localStorage.setItem(\"Expiry-Timestamp\", result.getIdToken().getExpiration())\n      localStorage.setItem(\"Login-TimeStamp\", result.getIdToken().getIssuedAt())\n      localStorage.setItem(\"TimeStamp\", result.idToken.payload[\"custom:timestamp\"] || 0);\n      console.log(result.idToken.payload.sub);\n      \n      history.push(\"/Live-Arbitrage\");  // or whatever route you want a signed in user to be redirected to\n    },\n    onFailure(err) {\n      alert(err.message);\n    },\n  });\n  return;\n};\n\nexport function resetPassword(username) {\n  var cognitoUser = new CognitoUser({\n    Username: username,\n    Pool: userPool\n  });\n\n  // call forgotPassword on cognitoUser\n  cognitoUser.forgotPassword({\n    onSuccess: function(result) {\n      console.log('call result: ' + result);\n    },\n    onFailure: function(err) {\n      alert(err);\n    },\n    inputVerificationCode() { // this is optional, and likely won't be implemented as in AWS's example (i.e, prompt to get info)\n      var verificationCode = prompt('Please input verification code ', '');\n      var newPassword = prompt('Enter new password ', '');\n      cognitoUser.confirmPassword(verificationCode, newPassword, this);\n    }\n  });\n}\n\n// confirmPassword can be separately built out as follows...  \n// export function confirmPassword(username, verificationCode, newPassword) {\n//   var cognitoUser = new CognitoUser({\n//     Username: username,\n//     Pool: userPool\n//   });\n\n//   return new Promise((resolve, reject) => {\n//     cognitoUser.confirmPassword(verificationCode, newPassword, {\n//       onFailure(err) {\n//         reject(err);\n//       },\n//       onSuccess() {\n//         resolve();\n//       },\n//     });\n//   });\n// }\n\nclass SignInFormPage extends React.Component {\n  constructor(props){\n    super(props);\n  }\n\n  state = {\n    Email: \"\",\n    Password: \"\",\n    Modal: false,\n  }\n\n  Forgot(email){\n    console.log(email);\n    console.log(userPool);\n    var cognitoUser = new CognitoUser({\n      Username: email,\n      Pool: userPool\n    });\n  \n    // call forgotPassword on cognitoUser\n    cognitoUser.forgotPassword({\n      onSuccess: function(result) {\n        console.log('call result: ' + result);\n      },\n      onFailure: function(err) {\n        alert(err.message);\n      },\n      inputVerificationCode() { // this is optional, and likely won't be implemented as in AWS's example (i.e, prompt to get info)\n        var verificationCode = prompt('Please input verification code ', '');\n        var newPassword = prompt('Enter new password ', '');\n        cognitoUser.confirmPassword(verificationCode, newPassword, this);\n      }\n    });\n  }\n\n  render(){\n    return (\n      <Container fluid>\n        <Row className=\"justify-content-center\">\n          <Col className=\"etfArbitrageTable align-item-center\" style={divStyle} xs={12} md={3}>\n            <Form>\n              <Form.Group controlId=\"formBasicEmail\">\n                <Form.Label style={{color:'white'}}>Email address</Form.Label>\n                <Form.Control value={this.state.Email} onChange={(e) => this.setState({Email: e.target.value})} type=\"email\" placeholder=\"Enter email\" />\n                <Form.Text className=\"text-muted\">\n                  We'll never share your email with anyone else.\n                </Form.Text>\n              </Form.Group>\n    \n              <Form.Group value={this.state.Password} onChange={(e) => this.setState({Password: e.target.value})} controlId=\"formBasicPassword\">\n                <Form.Label style={{color:'white'}}>Password</Form.Label>\n                <Form.Control type=\"password\" placeholder=\"Password\" />\n              </Form.Group>\n\n              <Form.Group controlId=\"formBasicCheckbox\">\n                <Form.Check  style={{color:'white'}} type=\"checkbox\" label=\"Check me out\" />\n              </Form.Group>\n              \n              <Button variant=\"primary\" onClick={() => {signIn(this.state.Email, this.state.Password, this.props.history)}} >\n                Login\n              </Button>\n              <br />\n              <br />\n\n              <Button variant=\"primary\" onClick={() => {this.Forgot(this.state.Email)}} >\n                Forgot Password\n              </Button>\n            </Form>\n          </Col>\n        </Row>\n       </Container>\n    );\n  }\n};\n\nexport default withRouter(SignInFormPage);","import React from \"react\";\n\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport {Link} from 'react-router-dom'\n\nimport {\n  AuthenticationDetails,\n  CognitoUserPool,\n  CognitoUserAttribute,\n  CognitoUser,\n  CognitoUserSession,\n} from \"amazon-cognito-identity-js\";\n\nimport moment from 'moment';\n\nimport { withRouter } from 'react-router'\n\nconst divStyle = {\n  paddingTop: '10%',\n};\n\nconst userPool = new CognitoUserPool({UserPoolId: 'us-east-1_rLN94MOu0', ClientId: '5fhruc7d6tfo0o1kr41ltfass5'});\n\nclass SignUpFormPage extends React.Component {\n  constructor(props){\n    super(props);\n  }\n\n  state = {\n    Name:\"\",\n    Email: \"\",\n    Phone: \"\",\n    Password: \"\",\n    CnfrmPassword : \"\",\n  }\n\n  render(){\n    return (\n      <Container fluid>\n        <Row className=\"justify-content-center\">\n          <Col className=\"etfArbitrageTable align-item-center\" style={divStyle} xs={12} md={3}>\n            \n            <Form>\n              <Form.Group controlId=\"formBasicName\">\n                <Form.Label style={{color:'white'}}>Full Name</Form.Label>\n                <Form.Control value={this.state.Name} onChange={(e) => this.setState({Name: e.target.value})} type=\"name\" placeholder=\"Enter your Full Name\" />\n              </Form.Group>\n              <Form.Group controlId=\"formBasicEmail\">\n                <Form.Label style={{color:'white'}}>Email address</Form.Label>\n                <Form.Control value={this.state.Email} onChange={(e) => this.setState({Email: e.target.value})} type=\"email\" placeholder=\"Enter email\" />\n                <Form.Text className=\"text-muted\">\n                  We'll never share your email with anyone else.\n                </Form.Text>\n              </Form.Group>\n\n              <Form.Group controlId=\"formBasicPhone\">\n                <Form.Label style={{color:'white'}}>Phone Number</Form.Label>\n                <Form.Control value={this.state.Phone} onChange={(e) => this.setState({Phone: e.target.value})} type=\"text\" placeholder=\"Enter Phone No.\" />\n                <Form.Text className=\"text-muted\">\n                  Country Code followed by phone number.<br/>\n                  Eg. : +14325551212.<br/>\n                  We'll never share your phone number with anyone else.\n                </Form.Text>\n              </Form.Group>\n  \n              <Form.Group value={this.state.Password} onChange={(e) => this.setState({Password: e.target.value})} controlId=\"formBasicPassword\">\n                <Form.Label style={{color:'white'}}>Password</Form.Label>\n                <Form.Control type=\"password\" placeholder=\"Password\" />\n                <Form.Text className=\"text-muted\">\n                  Password must contain : <br/>\n                  Must be 8 characters or longer<br/>\n                  Numbers(0-9)<br/>\n                  Uppercase Letters(A-Z)<br/>\n                  Lowercase Letters(a-z)<br/>\n                  Special Characters(!,@,#,$,%...etc.)\n                </Form.Text>\n              </Form.Group>\n              \n              <Form.Group value={this.state.CnfrmPassword} onChange={(e) => this.setState({CnfrmPassword: e.target.value})} controlId=\"formBasicPassword\">\n                <Form.Label style={{color:'white'}}>Confirm Password</Form.Label>\n                <Form.Control type=\"password\" placeholder=\"Confirm Password\" />\n              </Form.Group>\n              \n              <Button variant=\"primary\" onClick={() => {signUp(this.state.Name, this.state.Email, this.state.Phone, this.state.Password, this.state.CnfrmPassword, this.props.history)}} >\n                Submit\n              </Button>\n              <Col  style={{color:'white'}} lg={24}>\n                Or <Link to=\"/login\">Login to your account!</Link>\n              </Col>\n            </Form>\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n};\n\nconst signUp = (\n  name,\n  email,\n  phone,\n  password,\n  ConfirmPassword,\n  history,\n) => {\n  console.log(name);\n  console.log(email);\n  console.log(password);\n  console.log(phone);\n  if (password !== ConfirmPassword){\n    alert(\"Passwords Don't match\");\n    return;\n  }\n  if (!phone){\n    alert(\"Please provide your phone number\")\n    return;\n  }\n  const userTimestamp = moment().unix();\n  const stringUserTimestamp = userTimestamp.toString();\nconst user = {\n    name,\n    email,\n    phone,\n    password,\n  };\nconst attributesToBeAdded = [\n    {\n      Name: \"name\",\n      Value: user.name,\n    },\n    {\n      Name: \"email\",\n      Value: user.email,\n    },\n    {\n      Name: \"phone_number\",\n      Value: user.phone,\n    }\n  ];\nconst attrList = attributesToBeAdded.map(\n      attr => {\n      return new CognitoUserAttribute(attr);\n    }\n  );\nuserPool.signUp(email, password, attrList, [], (err, result) => {\n    if (err) {\n      console.log(err);\n      alert(err.message);\n      return;\n    }\n    // setLoading(false);\n    if (result && result.user) {\n      console.log(result);\n      console.log(result.user);\n      localStorage.setItem(\"userID\", result.userSub);\n      localStorage.setItem(\"username\", email);\n      console.log(localStorage.getItem(\"userID\"));\n      console.log(localStorage.getItem(\"username\"));\n      console.log(history);\n      history.push('/EmailVerification');\n    }\n  });\n  return;\n};\n\nexport default withRouter(SignUpFormPage);","import React from \"react\";\nimport { withRouter } from 'react-router'\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\nimport Container from 'react-bootstrap/Container'\nimport Row from 'react-bootstrap/Row'\nimport Col from 'react-bootstrap/Col'\nimport {\n  AuthenticationDetails,\n  CognitoUserPool,\n  CognitoUserAttribute,\n  CognitoUser,\n  CognitoUserSession,\n} from \"amazon-cognito-identity-js\";\n\nimport ForgotPassword from './forgotpassword';\n\nconst userPool = new CognitoUserPool({UserPoolId: 'us-east-1_rLN94MOu0', ClientId: '5fhruc7d6tfo0o1kr41ltfass5'});\n\nconst divStyle = {\n  paddingTop: '10%',\n};\n\nconst confirmUser = (\n  userId ,\n  username ,\n  code,\n  history\n) => {\n  console.log(code);\n  const userData = {\n    Username: username,\n    Pool: userPool,\n  };\n  const cognitoUser = new CognitoUser(userData);\n  cognitoUser.confirmRegistration(code, true, (err, result) => {\n    if (err) {\n      alert(err.message);\n    }\n    if (result === \"SUCCESS\") {\n      // setLoading(false);\n      localStorage.setItem(\"UserAccountVerified\", true);\n      alert(\"You are verified now\");\n      history.push('/Login')\n    }\n  });\n};\n\nclass EmailVerification extends React.Component {\n  constructor(props){\n    super(props);\n  }\n\n  state = {\n    Code: \"\",\n    userId: localStorage.getItem(\"userID\"),\n    username: localStorage.getItem(\"username\"),\n  }\n\n  render(){\n    return (\n      <Container fluid>\n        <Row className=\"justify-content-center\">\n          <Col className=\"etfArbitrageTable align-item-center\" style={divStyle} xs={12} md={3}>\n            <Form>\n              <Form.Group value={this.state.Code} onChange={(e) => this.setState({Code: e.target.value})}  controlId=\"formBasicPassword\">\n                <Form.Label>Enter Verification Code</Form.Label>\n                <Form.Control type=\"password\" placeholder=\"Password\" />\n              </Form.Group>\n              <Button variant=\"primary\" onClick={() => confirmUser(this.state.userId, this.state.username, this.state.Code, this.props.history)}>\n                Submit\n              </Button>\n            </Form>\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n};\n\n\nexport default withRouter(EmailVerification);\n\n","import React, { useState } from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport Table from \"react-bootstrap/Table\";\nimport { useEffect } from \"react\";\n\nconst DescriptionTable = (props) => {\n  const { DescriptionData } = props;\n\n  const [order, setTableOrder] = useState([]);\n  const [orderType, setOrderType] = useState(\"ASC\");\n\n  useEffect(() => {\n    if (typeof DescriptionData === \"object\") {\n      const order = Object.keys(DescriptionData).sort();\n      setTableOrder(order);\n    }\n  }, [DescriptionData]);\n\n  const changeOrder = () => {\n    if (orderType === \"ASC\") {\n      const order = Object.keys(DescriptionData).sort().reverse();\n      setOrderType(\"DSC\");\n      setTableOrder(order);\n    }\n    if (orderType === \"DSC\") {\n      const order = Object.keys(DescriptionData).sort();\n      setOrderType(\"ASC\");\n      setTableOrder(order);\n    }\n  };\n\n  return (\n    <Card>\n      <Card.Header className=\"text-white bg-color-dark\">\n        ETF Description\n      </Card.Header>\n      <Card.Body className=\"padding-0 bg-color-dark overflow-auto height-50vh font-size-sm\">\n        <Table size=\"sm\" striped bordered hover variant=\"dark\">\n          <thead>\n            <tr>\n              <th className=\"cursor-pointer\" onClick={changeOrder}>\n                Name\n              </th>\n              <th>Value</th>\n            </tr>\n          </thead>\n          <tbody>\n            {typeof DescriptionData === \"object\" &&\n              order.map((key) => (\n                <tr key={key}>\n                  <td>{key && key}</td>\n                  <td>{DescriptionData[key] && DescriptionData[key]} </td>\n                </tr>\n              ))}\n          </tbody>\n        </Table>\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default DescriptionTable;\n","import React, { PureComponent } from \"react\";\nimport { PieChart, Pie, Sector, Cell } from \"recharts\";\n\nconst renderActiveShape = (props) => {\n  const RADIAN = Math.PI / 180;\n  const {\n    cx,\n    cy,\n    midAngle,\n    innerRadius,\n    outerRadius,\n    startAngle,\n    endAngle,\n    fill,\n    payload,\n    value,\n  } = props;\n  const sin = Math.sin(-RADIAN * midAngle);\n  const cos = Math.cos(-RADIAN * midAngle);\n  const sx = cx + (outerRadius + 10) * cos;\n  const sy = cy + (outerRadius + 10) * sin;\n  const mx = cx + (outerRadius + 30) * cos;\n  const my = cy + (outerRadius + 30) * sin;\n  const ex = mx + (cos >= 0 ? 1 : -1) * 22;\n  const ey = my;\n  const textAnchor = cos >= 0 ? \"start\" : \"end\";\n\n  return (\n    <g>\n      <text x={cx} y={cy} dy={8} textAnchor=\"middle\" fill={fill}>\n        {payload.name}\n      </text>\n      <Sector\n        cx={cx}\n        cy={cy}\n        innerRadius={innerRadius}\n        outerRadius={outerRadius}\n        startAngle={startAngle}\n        endAngle={endAngle}\n        fill={fill}\n      />\n      <Sector\n        cx={cx}\n        cy={cy}\n        startAngle={startAngle}\n        endAngle={endAngle}\n        innerRadius={outerRadius + 6}\n        outerRadius={outerRadius + 10}\n        fill={fill}\n      />\n      <path\n        d={`M${sx},${sy}L${mx},${my}L${ex},${ey}`}\n        stroke={fill}\n        fill=\"none\"\n      />\n      <circle cx={ex} cy={ey} r={2} fill={fill} stroke=\"none\" />\n      <text\n        x={ex + (cos >= 0 ? 1 : -1) * 12}\n        y={ey}\n        textAnchor={textAnchor}\n        fill=\"#333\"\n      >{`${value}`}</text>\n    </g>\n  );\n};\n\nconst convertData = (data = {}) => {\n  const convertedData = [];\n  Object.entries(data).forEach(([key, value]) =>\n    convertedData.push({ name: key, value: value.TickerWeight })\n  );\n  return convertedData;\n};\n\nclass HoldingsPieChart extends PureComponent {\n  state = {\n    data: [],\n    chartname: \"\",\n    activeIndex: 0,\n    COLORS: [\"#0088FE\", \"#00C49F\", \"#FFBB28\", \"#FF8042\"],\n  };\n\n  componentDidUpdate(prevProps) {\n    const { data } = this.props;\n\n    if (data !== prevProps.data && typeof data === \"object\") {\n      const tempData = convertData(data);\n      this.setState({ ...this.state, data: tempData });\n    }\n  }\n\n  componentDidMount() {\n    if (typeof this.props.data === \"object\") {\n      const tempData = convertData(this.props.data);\n      this.setState({ ...this.state, data: tempData });\n    }\n  }\n\n  onPieEnter = (data, index) => {\n    this.setState({\n      activeIndex: index,\n    });\n  };\n\n  render() {\n  \n    return (\n      <PieChart width={350} height={300}>\n        <Pie\n          activeIndex={this.state.activeIndex}\n          activeShape={renderActiveShape}\n          data={this.state.data}\n          cx={175}\n          cy={150}\n          innerRadius={25}\n          outerRadius={90}\n          fill=\"#8884d8\"\n          dataKey=\"value\"\n          onMouseEnter={this.onPieEnter}\n        >\n          {this.state.data.map((entry, index) => (\n            <Cell\n              key={index}\n              fill={this.state.COLORS[index % this.state.COLORS.length]}\n            />\n          ))}\n        </Pie>\n      </PieChart>\n    );\n  }\n}\n\nexport default HoldingsPieChart;\n","import React, { useState } from \"react\";\nimport { Button, Modal } from \"react-bootstrap\";\nimport HoldingsPieChart from \"./HoldingsPieChart\";\n\nconst PieChartModal = ({ data, element }) => {\n  const [show, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n  return (\n    <>\n      <Button\n        className=\"margin-left-auto padding-1px\"\n        size=\"sm\"\n        variant=\"primary\"\n        onClick={handleShow}\n      >\n        PieChart\n      </Button>\n\n      {show && (\n        <Modal show={show} onHide={handleClose}>\n          <Modal.Header closeButton>\n            <Modal.Title>ETF Holdings</Modal.Title>\n          </Modal.Header>\n          <Modal.Body className=\"margin-auto\">\n            <HoldingsPieChart data={data} />\n          </Modal.Body>\n          <Modal.Footer>\n            <Button variant=\"secondary\" onClick={handleClose}>\n              Close\n            </Button>\n          </Modal.Footer>\n        </Modal>\n      )}\n    </>\n  );\n};\n\nexport default PieChartModal;\n","import React, { useState } from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport Table from \"react-bootstrap/Table\";\nimport { useEffect } from \"react\";\nimport Axios from \"axios\";\nimport PieChartModal from \"./PieChartModal\";\n\nconst HoldingsTable = (props) => {\n  const { ETF, startDate } = props;\n  const [tableData, setTableData] = useState({});\n  const [order, setTableOrder] = useState([]);\n  const [orderType, setOrderType] = useState(\"ASC\");\n\n  useEffect(() => {\n    Axios.get(\n      `http://localhost:5000/ETfDescription/getHoldingsData/${ETF}/${startDate}`\n    )\n      .then(({ data }) => {\n        setTableData(data);\n      })\n      .catch((err) => console.log(err));\n\n    // if (typeof data === \"object\") {\n    //   const order = Object.keys(data).sort();\n    //   setTableOrder(order);\n    // }\n  }, [ETF, startDate]);\n\n  useEffect(() => {\n    if (typeof tableData === \"object\") {\n      const order = Object.keys(tableData).sort();\n      setTableOrder(order);\n    }\n  }, [tableData]);\n\n  const changeOrder = () => {\n    if (orderType === \"ASC\") {\n      const order = Object.keys(tableData).sort().reverse();\n      setOrderType(\"DSC\");\n      setTableOrder(order);\n    }\n    if (orderType === \"DSC\") {\n      const order = Object.keys(tableData).sort();\n      setOrderType(\"ASC\");\n      setTableOrder(order);\n    }\n  };\n\n  console.log(props);\n  return (\n    <Card>\n      <Card.Header className=\"text-white bg-color-dark flex-row\">\n        ETF Holdings\n        <PieChartModal data={tableData} element={\"TickerWeight\"} />\n      </Card.Header>\n      <Card.Body className=\"padding-0 bg-color-dark overflow-auto height-50vh font-size-sm\">\n        <Table size=\"sm\" striped bordered hover variant=\"dark\">\n          <thead>\n            <tr>\n              <th className=\"cursor-pointer\" onClick={changeOrder}>\n                Symbol\n              </th>\n              <th>TickerName</th>\n              <th>TickerWeight</th>\n            </tr>\n          </thead>\n          <tbody>\n            {typeof tableData === \"object\" &&\n              order.map((key) => (\n                <tr key={key}>\n                  <td>{key}</td>\n                  <td>{tableData[key] && tableData[key].TickerName}</td>\n                  <td> {tableData[key] && tableData[key].TickerWeight} </td>\n                </tr>\n              ))}\n          </tbody>\n        </Table>\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default HoldingsTable;\n","import React, { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport Axios from \"axios\";\nimport { Card, Table } from \"react-bootstrap\";\n\nconst PnlTable = (props) => {\n  const { ETF } = props;\n\n  const [tableData, setTableData] = useState({});\n\n  useEffect(() => {\n    Axios.get(\n      `http://localhost:5000/PastArbitrageData/CommonDataAcrossEtf/${ETF}`\n    )\n      .then((res) => setTableData(JSON.parse(res.data.PNLOverDates)))\n      .catch((err) => console.log(err));\n  }, [ETF]);\n\n  return (\n    <Card>\n      <Card.Header className=\"text-white bg-color-dark\">\n        ETF in same industry : Technology Equities\n      </Card.Header>\n      <Card.Body className=\"padding-0 bg-color-dark overflow-auto height-50vh font-size-sm\">\n        \n          <Table size=\"sm\" striped bordered hover variant=\"dark\">\n            <thead>\n              <tr>\n                <th className=\"cursor-pointer\">Date</th>\n                <th># R.Buy</th>\n                <th># R.Sell</th>\n                <th># T.Buy</th>\n                <th># T.Sell</th>\n                <th>% R.Buy</th>\n                <th>% R.Sell</th>\n                <th>Buy Return%</th>\n                <th>Sell Return%</th>\n              </tr>\n            </thead>\n            <tbody>\n              {typeof tableData === \"object\" &&\n                Object.entries(tableData).map(([key, value]) => {\n                  return (\n                    <tr key={key}>\n                      <td>{key}</td>\n                      <td>{tableData[key] && tableData[key][\"# R.Buy\"]}</td>\n                      <td>{tableData[key] && tableData[key][\"# R.Sell\"]}</td>\n                      <td>{tableData[key] && tableData[key][\"# T.Buy\"]}</td>\n                      <td>{tableData[key] && tableData[key][\"# T.Sell\"]}</td>\n                      <td>{tableData[key] && tableData[key][\"% R.Buy\"]}</td>\n                      <td>{tableData[key] && tableData[key][\"% R.Sell\"]}</td>\n                      <td>{tableData[key] && tableData[key][\"Buy Return%\"]}</td>\n                      <td>\n                        {tableData[key] && tableData[key][\"Sell Return%\"]}\n                      </td>\n                    </tr>\n                  );\n                })}\n            </tbody>\n          </Table>\n       \n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default PnlTable;\n","import React, { useState } from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport Table from \"react-bootstrap/Table\";\nimport { useEffect } from \"react\";\nimport Axios from \"axios\";\n\nconst SameIssuerTable = (props) => {\n  const { IssuerName } = props;\n  const [tableData, setTableData] = useState({});\n  const [order, setTableOrder] = useState([]);\n  const [orderType, setOrderType] = useState(\"ASC\");\n\n  useEffect(() => {\n    if (IssuerName) {\n      Axios.get(\n        `http://localhost:5000/ETfDescription/getETFWithSameIssuer/${IssuerName}`\n      )\n        .then(({ data }) => {\n          console.log(data);\n          setTableData(data);\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    }\n  }, [IssuerName]);\n\n  useEffect(() => {\n    if (typeof tableData === \"object\") {\n      const order = Object.keys(tableData).sort();\n      setTableOrder(order);\n    }\n  }, [tableData]);\n\n  const changeOrder = () => {\n    if (orderType === \"ASC\") {\n      const order = Object.keys(tableData).sort().reverse();\n      setOrderType(\"DSC\");\n      setTableOrder(order);\n    }\n    if (orderType === \"DSC\") {\n      const order = Object.keys(tableData).sort();\n      setOrderType(\"ASC\");\n      setTableOrder(order);\n    }\n  };\n\n  return (\n    <Card>\n      <Card.Header className=\"text-white bg-color-dark\">\n        ETF in Same Issuer\n      </Card.Header>\n      <Card.Body className=\"padding-0 bg-color-dark overflow-auto height-50vh font-size-sm\">\n        <Table size=\"sm\" striped bordered hover variant=\"dark\">\n          <thead>\n            <tr>\n              <th className=\"cursor-pointer\" onClick={changeOrder}>\n                Symbol\n              </th>\n              <th>ETF Name</th>\n              <th>TotalAssetsUnderMgmt</th>\n            </tr>\n          </thead>\n          <tbody>\n            {typeof tableData === \"object\" &&\n              order.map((key) => (\n                <tr key={key}>\n                  <td>{key}</td>\n                  <td>{tableData[key] && tableData[key].ETFName}</td>\n                  <td>\n                    {\" \"}\n                    {tableData[key] && tableData[key].TotalAssetsUnderMgmt}\n                  </td>\n                </tr>\n              ))}\n          </tbody>\n        </Table>\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default SameIssuerTable;\n","import React, { useState } from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport Table from \"react-bootstrap/Table\";\nimport { useEffect } from \"react\";\nimport { InputGroup, FormControl } from \"react-bootstrap\";\nimport { escapeRegExp } from \"lodash\";\n\n\nconst SimilarAssetUnderManagement = (props) => {\n  const { SimilarTotalAsstUndMgmt } = props;\n  const [searchValue, setSearchValue] = useState(\"\");\n\n  const [order, setTableOrder] = useState([]);\n  const [orderType, setOrderType] = useState(\"ASC\");\n\n  useEffect(() => {\n    if (typeof SimilarTotalAsstUndMgmt === \"object\") {\n      const order = Object.keys(SimilarTotalAsstUndMgmt).sort();\n      setTableOrder(order);\n    }\n  }, [SimilarTotalAsstUndMgmt]);\n\n  const changeOrder = () => {\n    if (orderType === \"ASC\") {\n      const order = Object.keys(SimilarTotalAsstUndMgmt).sort().reverse();\n      setOrderType(\"DSC\");\n      setTableOrder(order);\n    }\n    if (orderType === \"DSC\") {\n      const order = Object.keys(SimilarTotalAsstUndMgmt).sort();\n      setOrderType(\"ASC\");\n      setTableOrder(order);\n    }\n  };\n\n  const handleSearch = (e) => {\n    const value = e.target.value;\n    setSearchValue(value);\n    const re = new RegExp(escapeRegExp(searchValue), \"i\")\n    setTimeout(() => {\n      console.log(searchValue)\n    }, 5000);\n  };\n\n  return (\n    <Card>\n      <Card.Header className=\"text-white bg-color-dark\">\n        Similar Asset under Management\n        {/* <InputGroup size=\"sm\">\n          <InputGroup.Prepend>\n            <InputGroup.Text id=\"inputGroup-sizing-sm\">Search</InputGroup.Text>\n          </InputGroup.Prepend>\n          <FormControl\n            value={searchValue}\n            onChange={handleSearch}\n            aria-label=\"Small\"\n            aria-describedby=\"inputGroup-sizing-sm\"\n          />\n        </InputGroup> */}\n      </Card.Header>\n      <Card.Body className=\"padding-0 bg-color-dark overflow-auto height-50vh font-size-sm\">\n        <Table size=\"sm\" striped bordered hover variant=\"dark\">\n          <thead>\n            <tr>\n              <th className=\"cursor-pointer\" onClick={changeOrder}>\n                Symbol\n              </th>\n              <th>ETF Name</th>\n              <th>Total Asset</th>\n            </tr>\n          </thead>\n          <tbody>\n            {typeof SimilarTotalAsstUndMgmt === \"object\" &&\n              order.map((key) => (\n                <tr key={key}>\n                  <td>{key && key}</td>\n                  <td>\n                    {SimilarTotalAsstUndMgmt[key] &&\n                      SimilarTotalAsstUndMgmt[key].ETFName}{\" \"}\n                  </td>\n                  <td>\n                    {SimilarTotalAsstUndMgmt[key] &&\n                      SimilarTotalAsstUndMgmt[key].TotalAssetsUnderMgmt}{\" \"}\n                  </td>\n                </tr>\n              ))}\n          </tbody>\n        </Table>\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default SimilarAssetUnderManagement;\n","import React, { useState } from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport Table from \"react-bootstrap/Table\";\nimport { useEffect } from \"react\";\nimport Axios from \"axios\";\n\nconst SameIndustryTable = (props) => {\n  const { EtfDbCategory } = props;\n  const [tableData, setTableData] = useState({});\n  const [order, setTableOrder] = useState([]);\n  const [orderType, setOrderType] = useState(\"ASC\");\n\n  useEffect(() => {\n    if (EtfDbCategory) {\n      Axios.get(\n        `http://localhost:5000/ETfDescription/getETFsWithSameETFdbCategory/${EtfDbCategory}`\n      )\n        .then(({ data }) => {\n          console.log(data);\n          setTableData(data);\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    }\n  }, [EtfDbCategory]);\n\n  useEffect(() => {\n    if (typeof tableData === \"object\") {\n      const order = Object.keys(tableData).sort();\n      setTableOrder(order);\n    }\n  }, [tableData]);\n\n  const changeOrder = () => {\n    if (orderType === \"ASC\") {\n      const order = Object.keys(tableData).sort().reverse();\n      setOrderType(\"DSC\");\n      setTableOrder(order);\n    }\n    if (orderType === \"DSC\") {\n      const order = Object.keys(tableData).sort();\n      setOrderType(\"ASC\");\n      setTableOrder(order);\n    }\n  };\n\n  return (\n    <Card>\n      <Card.Header className=\"text-white bg-color-dark\">\n        ETF in same industry : Technology Equities\n      </Card.Header>\n      <Card.Body className=\"padding-0 bg-color-dark overflow-auto height-50vh font-size-sm\">\n        <Table size=\"sm\" striped bordered hover variant=\"dark\">\n          <thead>\n            <tr>\n              <th className=\"cursor-pointer\" onClick={changeOrder}>\n                Symbol\n              </th>\n              <th>ETF Name</th>\n              <th>TotalAssetsUnderMgmt</th>\n            </tr>\n          </thead>\n          <tbody>\n            {typeof tableData === \"object\" &&\n              order.map((key) => (\n                <tr key={key}>\n                  <td>{key}</td>\n                  <td>{tableData[key] && tableData[key].ETFName}</td>\n                  <td>\n                    {tableData[key] && tableData[key].TotalAssetsUnderMgmt}{\" \"}\n                  </td>\n                </tr>\n              ))}\n          </tbody>\n        </Table>\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default SameIndustryTable;\n","import React from \"react\";\nimport Axios from \"axios\";\nimport { Row, Col, Card } from \"react-bootstrap\";\nimport { DescriptionTable } from \"./ETF_Descriptions\";\nimport AppTable from \"../../Component/Table\";\nimport { ETFHoldings } from \"./ETF_Holdings\";\nimport { PNL } from \"./PNL\";\nimport { EtfSameIssuer } from \"./ETF_Same_Issuer\";\nimport { SimilarAssetUnderManagement } from \"./ETF_Similar_Asset_Management\";\nimport { EtfSameIndustry } from \"./ETF_Same_Industry\";\n\nclass ETF_Description extends React.Component {\n  state = {\n    DescriptionData: null,\n    HoldingsData: \"\",\n    SameIssuerETFs: \"\",\n    IssuerName: null,\n    SimilarTotalAsstUndMgmt: \"\",\n    EtfsWithSameEtfDbCategory: \"\",\n    EtfDbCategory: null,\n    OHLCDailyData: \"\",\n    PNLOverDates: \"\",\n    LoadingStatement: \"Loading.. PNL for \" + this.props.ETF,\n    magnitudeOfArbitrage: \"\",\n  };\n\n  componentDidMount() {\n    const { startDate, ETF } = this.props;\n    Axios.get(\n      `http://localhost:5000/ETfDescription/EtfData/${ETF}/${startDate}`\n    )\n      .then((res) => {\n        const { ETFDataObject, SimilarTotalAsstUndMgmt } = res.data;\n        this.setState({\n          ...this.state,\n          DescriptionData: ETFDataObject,\n          SimilarTotalAsstUndMgmt: SimilarTotalAsstUndMgmt,\n          IssuerName: ETFDataObject.Issuer,\n          EtfDbCategory: ETFDataObject.ETFdbCategory,\n        });\n      })\n      .catch((err) => console.log(err));\n  }\n\n  render() {\n      console.log(this.state)\n    const {\n      DescriptionData,\n      IssuerName,\n      SimilarTotalAsstUndMgmt,\n      EtfDbCategory,\n    } = this.state;\n    const { startDate, ETF } = this.props;\n    return (\n      <Row>\n        <Col xs={12} md={12}>\n          <Row>\n            <Col xs={12} md={3}>\n              {DescriptionData && (\n                <DescriptionTable DescriptionData={DescriptionData} />\n              )}\n            </Col>\n\n            {/*\n        <Col xs={12} md={8}>\n          <Card>\n            <Card.Header className=\"text-white BlackHeaderForModal\">Price Chart</Card.Header>\n            <Card.Body style={{'backgroundColor':'#292b2c'}}>\n              <ChartComponent data={this.state.OHLCDailyData} />\n            </Card.Body>\n          </Card>\n        </Col>\n      */}\n\n            <Col xs={12} md={3}>\n              <ETFHoldings ETF={ETF} startDate={startDate} />\n            </Col>\n\n            <Col xs={12} md={6}>\n              <PNL ETF={ETF} />\n            </Col>\n\n            <Col xs={12} md={4}>\n              <EtfSameIssuer IssuerName={IssuerName} />\n            </Col>\n\n            <Col xs={12} md={4}>\n              {SimilarTotalAsstUndMgmt && (\n                <SimilarAssetUnderManagement\n                  SimilarTotalAsstUndMgmt={SimilarTotalAsstUndMgmt}\n                />\n              )}\n            </Col>\n\n            <Col xs={12} md={4}>\n              {EtfDbCategory && (\n                <EtfSameIndustry EtfDbCategory={EtfDbCategory} />\n              )}\n            </Col>\n          </Row>\n        </Col>\n      </Row>\n    );\n  }\n}\n\nexport default ETF_Description;\n","import React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport { Route, BrowserRouter as Router, Redirect } from 'react-router-dom'\nimport Container from 'react-bootstrap/Container'\n\nimport Former from './Component/Form.js';\nimport ETFComparison from './Component/ETF-Comparison';\nimport Description from './Component/ETF-Description';\nimport HistoricalArbitrage from './Component/Historical-Arbitrage';\nimport Live_Arbitrage from './Component/Live-Arbitrage';\nimport Live_Arbitrage_Single from './Component/Live-Arbitrage-Single';\nimport ML from './Component/Machine-Learning';\nimport SignInFormPage from './Component/User/login';\nimport SignUpFormPage from './Component/User/signup';\nimport EmailVerification from './Component/User/emailverification';\nimport { createBrowserHistory } from \"history\";\nimport {\n\tAuthenticationDetails,\n\tCognitoUserPool,\n\tCognitoUserAttribute,\n\tCognitoUser,\n\tCognitoUserSession,\n} from \"amazon-cognito-identity-js\";\n\n\n// StylesSheets\nimport './static/css/style.css';\nimport { ETF_Description } from './Pages/ETF_Description';\n\nconst history = createBrowserHistory();\n\nconst userPool = new CognitoUserPool({UserPoolId: 'ap-south-1_x8YZmKVyG', ClientId: '2j72c46s52rm3us8rj720tsknd'});\nconst cognitoUser = null\ntry {\n  cognitoUser = new CognitoUser({\n    Username: localStorage.getItem(\"username\"),\n    Pool: userPool\n  });\t\n}\ncatch(e){\n}\n\nconst PrivateRoute = ({ component: Component, path, ...rest }) => (\n  <Route path={path} {...rest} render={(props) => (\n    localStorage.getItem(\"Secret-Token\") ? ((parseInt(localStorage.getItem(\"Login-TimeStamp\"))+8*60*60)>Math.floor(new Date().getTime()/1000)?\n      <Component {...props} {...rest}/>\n      : <Redirect to='/Login' />) : <Redirect to='/Login' />\n  )} />\n)\n\nclass App extends Component {\n  \n  state={\n    ETF:'XLK',\n    startDate:'20200608'\n  };\n\n  componentDidMount() {\n\t\tthis.setState({\n\t\t\tETF:'XLK',\n\t   \t\tstartDate:'20200608'\n\t\t});\n  }\n\n  SubmitFn = (etfname, newdate) => {\t\n    console.log(\"Change ETF Name & Date\");\n    \n    let ETFcopy = this.state.ETF;\n    let startDatecopy = this.state.startDate;\n\n    ETFcopy=etfname\n    startDatecopy=newdate\n\n    console.log(etfname);\n    console.log(newdate);\n      \n    this.setState({\n      ETF:ETFcopy,\n      startDate:startDatecopy\n    });\n  };\n\n  SubmitNewETF = (etfName) => {\n    this.setState({ETF: etfName});\n  }\n\n\n  render(){\n  \treturn (\n    <Router history={history} >\n      <div className=\"Container\">\n        <div>\n          <div className=\"Form\">\n            <Former SubmitFn={this.SubmitFn} ETF={this.state.ETF} startDate={this.state.startDate}/>\n          </div>\n        </div>\n      </div>\n      <Container fluid style={{'backgroundColor':'#292b2c'}}>\n        {/* <Route path=\"/ETF-Description\" render={() => <Description startDate={this.state.startDate} ETF={this.state.ETF} submitFn={this.SubmitNewETF} />} /> */}\n        {/* <Route path=\"/HistoricalArbitrage\" render={() => <HistoricalArbitrage startDate ={this.state.startDate} ETF={this.state.ETF} submitFn={this.SubmitFn} />} /> */}\n        {/* <Route path=\"/Live-Arbitrage-Single\" render={() => <Live_Arbitrage_Single ETF={this.state.ETF} />} /> */}\n        {/* <Route path=\"/Live-Arbitrage\" render={() => <Live_Arbitrage ETF={this.state.ETF} />} /> */}\n        \n        <PrivateRoute path=\"/ETF-Description\" startDate={this.state.startDate} ETF={this.state.ETF} submitFn={this.SubmitNewETF} component={ETF_Description}/>\n        <PrivateRoute path=\"/HistoricalArbitrage\" component={HistoricalArbitrage} startDate ={this.state.startDate} ETF={this.state.ETF} submitFn={this.SubmitFn} />\n        <PrivateRoute path=\"/Live-Arbitrage-Single\" component={Live_Arbitrage_Single} ETF={this.state.ETF} />\n        <PrivateRoute path=\"/Live-Arbitrage\" component={Live_Arbitrage} ETF={this.state.ETF} />\n\n        <Route path=\"/SignUp\" render={() => <SignUpFormPage />} />\n        <Route path=\"/Login\" component={SignInFormPage} />\n        <Route path=\"/EmailVerification\" component={EmailVerification} />\n      </Container>\n    </ Router>\n    );\n  }\n\n}\n\nReactDOM.render(<App />,document.getElementById('root'));\n"],"sourceRoot":""}